[
    {
        "dgrm_name": "Tutorial 1  - Getting Started",
        "dgrm_short_description": "Flows for APEX Tutorial Series - Tutorial 1 - Getting Started.  Start here to learn about BPMN for Flows for APEX.",
        "dgrm_description": "**Overview:**  \r\nThe Flows for APEX system is a dynamic platform designed to facilitate business process modeling using Business Process Model and Notation (BPMN) standards. The tutorial highlighted here, authored by Richard Allen at Flowquest Ltd, serves as an introductory guide to leveraging BPMN models to orchestrate and automate business processes effectively.\r\n\r\n**Product Description:**  \r\nThis model offers users a hands-on tutorial with a pre-configured BPMN process named \"Getting Started.\" The process begins with a \"Process Start\" event and progresses through a series of structured tasks—Task A, Task B, Task C, and Task D, interlinked through sequence flows. A parallel gateway introduces path bifurcation to demonstrate concurrent task execution, followed by a merging point to synchronize these paths before culminating in a \"Process End\" event.\r\n\r\n**Key Features:**\r\n\r\n*   **Executable Models:** Provides fully executable process models, allowing users to simulate and monitor real-time execution of business processes.\r\n*   **User Guidance:** Richly annotated with documentation and text annotations to facilitate learning and understanding of BPMN constructs.\r\n*   **Process Monitoring:** Includes a Flow Monitor feature to oversee ongoing process instances, manage subflows, and review process variables.\r\n*   **Customization & Flexibility:** Users are encouraged to create and edit models to fit specific business needs, offering a personalized approach to process management.\r\n*   **Instructional Support:** The model includes step-by-step instructions and support for navigating through the process, making it ideal for both beginners and experienced users.\r\n\r\n**Target Audience:**  \r\nThis tutorial is designed for business analysts, process managers, and IT professionals interested in learning process automation using BPMN within the Flows for APEX environment. It provides foundational insights suitable for newcomers but also serves as a useful reference for experienced practitioners engaged in process optimization and workflow management.\r\n\r\n**Strategic Application:**  \r\nBy mastering the concepts presented in this tutorial, businesses can enhance operational efficiency, improve process clarity, and foster a culture of continuous process improvement. This aligns with strategic goals of optimizing resource allocation and streamlining operations for improved organizational effectiveness.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 1  - Getting Started_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 2a - Basic Navigation with Gateways",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial series - model 2a - covers directing the process direction using simple exclusive (OR) gateways, where the process can choose one forward path.",
        "dgrm_description": "The Gateway Routing Tutorial Model is an instructional framework designed to assist users in understanding and implementing decision-based process flows using BPMN (Business Process Model and Notation). This model provides a step-by-step guide on how to manage process flows through gateways using various routing techniques, and is particularly useful for applications integrated with Flows for APEX.\r\n\r\n**Key Features:**\r\n\r\n**Default Routing:**\r\n\r\n*   The model demonstrates default routing paths in a gateway where a specific direction is selected if no other conditions are met or instructions provided.\r\n\r\n**Gateway Routing Expressions:**\r\n\r\n*   It showcases the use of conditional expressions that evaluate at each gateway step to determine the next path based on user-defined logic.\r\n*   Demonstrates how variables can be set and evaluated, typically using PL/SQL expressions or functions.\r\n\r\n**Gateway Routing Variables:**\r\n\r\n*   The tutorial illustrates the use of routing variables, an older yet effective method, to direct the flow through a process.\r\n*   Users can set specific process variables ahead of the gateway to guide the flow.\r\n\r\n**Business Application:**\r\n\r\nThis model is particularly beneficial for organizations implementing business process management (BPM) systems where decision-making and flow control are based on complex business logic. It serves as a foundational guide for new practitioners or organizations transitioning to digital process automation, helping them visualize and develop robust process flows that align with specific business needs and improve operational efficiency.\r\n\r\n**End Value:**\r\n\r\nThrough this illustrative and practical approach, businesses can improve process efficiency, minimize errors in decision-making, and enhance the adaptability of business operations. This model functions not only as a learning tool but also as a blueprint for setting up adaptable business process management systems, which are crucial in today’s dynamic business environment.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 2a - Basic Navigation with Gateways_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 2b - Parallel Gateways",
        "dgrm_short_description": "Flows for APEX Tutorial 2b - Parallel Paths - takes process navigation one step forward and shows how to build parallel paths in your workflow.",
        "dgrm_description": "The Parallel Gateways Model is a structured business process visualization tool, created using BPMN (Business Process Model and Notation). This model is designed for organizations that seek to streamline and visualize their workflows involving parallel processes that require synchronization. It demonstrates the functionality and utilization of parallel gateways, vital for managing complex business operations that require concurrent processing and synchronization of multiple tasks.\r\n\r\n**Key Features:**\r\n\r\n**Parallel Gateway Utilization**:\r\n\r\n*   **B Split Gateway**: The starting point for parallel task execution. This gateway enables the simultaneous execution of tasks B1, B2, and B3, without requiring specific instructions or variables for path selection.\r\n*   **B Merge & Synchronize Gateway**: Acts as a convergence point where all concurrent tasks must complete before proceeding to the subsequent task, C. This ensures that the workflow remains synchronized and unified.\r\n\r\n**Diverging and Merging Flows**:\r\n\r\n*   **Direct and Independent Paths**: The model allows for the creation of independent paths, such as the divisions leading to tasks D, E, F, G, and H, demonstrating flexibility in process pathways that can conclude independently.\r\n*   **Exclusive Gateway Closure**: Instead of a parallel closure, the model integrates an exclusive gateway to conclude sections, illustrating non-synchronized path closure, allowing tasks F, G, and H to conclude their processes independently prior to moving on to a singular task, J.\r\n\r\n**Scenario Demonstrations**:\r\n\r\n*   **Balanced Path Requirements**: Projects clarity on how processes using parallel gateways must be structured to ensure all splitting paths ultimately meet at a merging point if synchronization is intended.\r\n*   **Independent Section Execution**: It showcases the model's capacity to handle multiple paths that do not necessarily require synchronization at the end, by allowing paths D1-D2 and E1-E2 to complete independently.\r\n\r\n**Benefits**:\r\n\r\n*   The model enhances understanding and visualization of complex workflows that necessitate parallel processing.\r\n*   It supports effective process management by clearly delineating process paths and synchronization points.\r\n*   The model allows business analysts and process managers to identify potential areas for improving process efficiencies and identifying bottlenecks.\r\n\r\n**Conclusion**:  \r\nThe Parallel Gateways Model is a value-adding tool for businesses aiming to optimize processes that entail simultaneous task execution and synchronization. It serves as a blueprint for designing, analyzing, and managing workflows that demand parallelism, ensuring enhanced task management and operational efficiency.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 2b - Parallel Gateways_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 2c - Inclusive Gateways",
        "dgrm_short_description": "Flows for APEX Tutorial 2c - Inclusive Gateways - takes process navigation one step further by introducing Inclusive Gateways, which allow you to have conditional parallel paths.",
        "dgrm_description": "**Overview:**  \r\nThe Inclusive Gateway BPMN Model is a sophisticated business process management tool designed to enhance workflow efficiency. This model employs Business Process Model and Notation (BPMN) to provide organizations with a flexible and dynamic way to manage decision-making processes within workflow systems.\r\n\r\n**Key Features:**\r\n\r\n**Inclusive Gateway Functionality:**\r\n\r\n*   Combines the features of both Parallel and Exclusive Gateways.\r\n*   Allows multiple forward paths to be activated based on set conditions.\r\n*   Facilitates decision-making that requires concurrent task flows.\r\n\r\n**Gateway Routing Expressions:**\r\n\r\n*   Introduces a new methodology in version 22.2 for routing decision-making.\r\n*   Uses PL/SQL expressions or functions to determine if a path should be taken.\r\n*   Offers flexibility by allowing process variables to influence routing, enabling dynamic adjustments based on real-time data.\r\n\r\n**Gateway Routing Variables:**\r\n\r\n*   Provides an alternative methodology for route selection by directly setting path names to be taken.\r\n*   Supports complex decision-making within workflows, tapping into process variables for tailored routing.\r\n\r\n**Default Path and Error Management:**\r\n\r\n*   Ensures a fallback mechanism with a default path, preventing process interruptions.\r\n*   Built-in error handling to guide flow when no conditions are met.\r\n\r\n**Script Task Capabilities:**\r\n\r\n*   Integrates PL/SQL procedures for robust routing logic.\r\n*   Allows database queries or calculations to dynamically determine routing paths.\r\n\r\n**Applications:**  \r\nThe model is ideal for enterprises requiring complex decision-making capabilities within their workflows. It is particularly beneficial where concurrent tasks must be managed with precision, such as in supply chain operations, customer service processes, and project management workflows.\r\n\r\n**Benefits:**\r\n\r\n*   Increases operational efficiency by allowing multiple task flows to be executed in parallel.\r\n*   Enhances flexibility and responsiveness in decision-making processes.\r\n*   Reduces errors and ensures continuity in business operations.\r\n*   Provides powerful customization options to tailor workflows to specific organizational needs.\r\n\r\n**Conclusion:**  \r\nThe Inclusive Gateway BPMN Model delivers a cutting-edge solution for businesses aiming to optimize process efficiency and adaptability. By leveraging advanced gateway functionalities, organizations can enhance their workflows' flexibility, ensuring that business processes align closely with operational demands and strategic objectives.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 2c - Inclusive Gateways_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 2d - Making your process pause",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial Series - Adding a Pause - shows how to use a timer to cause a process to pause or wait for a certain time.",
        "dgrm_description": "The BPMN (Business Process Model and Notation) Model \"Tutorial 2D Simple Timers\" is designed to provide a structured workflow for implementing and understanding timer events within business processes. This model educates users on integrating time-based conditions into processes using various timer configurations, ultimately improving operational efficiency and timing accuracy. Here's a breakdown of its key elements:\r\n\r\n**Start Event:**\r\n\r\n*   Initiates the process with the \"start 2d Timers\" event.\r\n\r\n**Adding and Specifying Timers:**\r\n\r\n*   **Concept 1:** Introduces the basic method of adding a timer event to pause the process for 10 seconds.\r\n*   **Concept 2:** Explores specifying timers using different formats - Oracle Method and ISO 8601 Style.\r\n\r\n**Parallel Gateway:**\r\n\r\n*   Splits the process into four paths, demonstrating different timer implementations:\r\n    *   **Fixed Duration (Oracle Method):**Pauses for a predetermined period using Oracle formatting.\r\n    *   **Fixed Duration (ISO 8601 Style):**Utilizes ISO 8601 to specify the duration before resuming the process.\r\n    *   **Fixed Time (Oracle Method):** Waits until a specific moment defined via Oracle parameters.\r\n    *   **Fixed Time (ISO 8601 Method):**Specifies an exact future timestamp using ISO 8601 standards.\r\n\r\n**Intermediate Catch Events:**\r\n\r\n*   Each path leads to intermediate catch events that validate timer conditions and transition to corresponding end events.\r\n\r\n**End Events:**\r\n\r\n*   Concludes each process path after the timer conditions are met, ensuring process completion without manual oversight.\r\n\r\n**Documentation and Notes:**\r\n\r\n*   Comprehensive annotations guide users on formatting, practical applications, and future enhancements such as boundary events and message flows.\r\n\r\n**Value Proposition:**  \r\nThis BPMN model provides businesses with a pragmatic framework to incorporate timers efficiently into their processes, enabling more precise control over operational timings. It serves as an instructive resource for educating process designers and operators on various timer applications, ultimately enhancing process automation and reliability. By exploiting standardized and flexible timer settings, businesses can ensure processes run smoothly and on schedule, significantly optimizing resource utilization and process throughput.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 2d - Making your process pause_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 3a - Setting Process Variables from your Model",
        "dgrm_short_description": "Flows for APEX BPMN Tutorials - Part 3a - introduces process variables, used for storing information for the duration of the process instance.",
        "dgrm_description": "**Process Model: Tutorial 3A - Setting Process Variables**\r\n\r\nThis business process model represents a tutorial designed by Richard Allen of Flowquest Consulting, focusing on the setting of process variables within a workflow. This model serves as an instructional guide within the Flows for APEX platform, illustrating advanced techniques for managing flow state using declarative variable expressions in a Business Process Model and Notation (BPMN) environment.\r\n\r\n#### Key Features:\r\n\r\n**Start Event**:\r\n\r\n*   Initializes the process by setting a standard variable, 'Originator', to track the user ID of the process initiator.\r\n\r\n**Intro Task**:\r\n\r\n*   Provides an introductory segment which leads to a key decision point in the workflow.\r\n\r\n**Gateway & Tasks**:\r\n\r\n*   Incorporates an inclusive gateway (Split) that allows for multiple pathways (A, B, and C), with dynamic routing based on predefined expressions.\r\n*   Tasks labelled 'A', 'B', and 'C' represent separate process paths that can be concurrently executed.\r\n\r\n**Process Variables**:\r\n\r\n*   Variables are dynamically set using various expression types (e.g., static, SQL queries, PL/SQL expressions) intended to simulate real-world data handling scenarios within a workflow.\r\n*   The structure includes pathways that test for the presence of specific database tables (e.g., EMP and DEPT) to demonstrate conditional processing.\r\n\r\n**Complex Decision-making**:\r\n\r\n*   The model utilizes exclusive and parallel gateways to guide the process flow based on complex decision-making rules defined by variable expressions.\r\n*   The 'EMP and DEPT exist?' gateway determines the process continuity by checking required resource availability.\r\n\r\n**End Events**:\r\n\r\n*   Concludes with multiple end events, each associated with distinct pathways (Static, Copy, SQL, and JSON processing) to showcase different outcome scenarios depending on the selected process path.\r\n\r\n#### Educational Insight:\r\n\r\nThis model is aimed at educating users on the capabilities of declarative variable expressions within BPMN, especially in the context of the Flows for APEX platform. The tutorial highlights how processes can be dynamically controlled and adjusted based on internal logic and data derivation, offering a comprehensive understanding of managing variables in process automation.\r\n\r\nWith an emphasis on practical application, this tutorial can serve as both an educational resource and a baseline for developers and business analysts to understand and implement variable manipulations in automated workflows. The tutorial suggests having standard database elements (e.g., EMP and DEPT tables) for optimal illustration of the tasks.\r\n\r\nOverall, this process model is an instructional asset that enhances understanding of variable management within complex business processes, aiming to bolster the operational efficiency of automated workflows through insightful learning.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 3a - Setting Process Variables from your Model_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 3b - Substitution and Bind Syntax",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 3b - discusses how to use substitution and  bind syntax to reference the content of a process variable.  This tutorial is not executable - just read the model...",
        "dgrm_description": "The business process model titled \"Tutorial 3b - Substitution and Bind Syntax\" is a structured representation of a workflow tutorial intended to educate users on the usage of substitution and bind syntax within a process management system, specifically designed for Oracle APEX (Application Express) environments aligned with BPMN (Business Process Model and Notation) standards.\r\n\r\n#### Key Components:\r\n\r\n**Process Variables**:\r\n\r\n*   The beginning of the tutorial emphasizes how process variables are utilized, which are crucial for programming dynamic and adaptable business processes.\r\n\r\n**Syntax Utilization**:\r\n\r\n*   **Substitution Syntax**: Introduces substitution of process variables into expressions, with details on using the `F4A$`prefix. This syntax is used for character formatting of a variable directly into a string.\r\n*   **Bind Syntax**: Binds variables directly into expressions or scripts using a similar prefix. It emphasizes safety and prevention against SQL injection, recommending usage in scripts to avoid unnecessary data conversion.\r\n\r\n**Workflow and Gateways**:\r\n\r\n*   Incorporates various tasks and decision gateways (e.g., parallel and exclusive gateways) to demonstrate process flow control using binding and substitution in different scenarios (e.g., tasks, gateways, user tasks).\r\n*   It represents timing and conditional pathways using intermediate events and sequence flows.\r\n\r\n**Conceptual Segments**:\r\n\r\n*   Presents three key concepts: the practical utilization of process variables, substitution vs. bind syntax nuances, and vital considerations on data formats (e.g., timestamps, dates).\r\n\r\n**Practical Advice**:\r\n\r\n*   Offers advice on the use of substitutions primarily for VARCHAR2 formatting and warns about proper formatting when handling dates and timestamps.\r\n*   Shows how binds should be preferred for direct variable usage and security reasons.\r\n\r\n**Annotations & Documentation**:\r\n\r\n*   The model is supported by text annotations clarifying various points on syntax usage and helping users understand the context without requiring the execution of the tutorial model itself.\r\n\r\n**End-End Process**:\r\n\r\n*   Ensures practitioners understand that the tutorial's goal is to educate about reading and understanding the model rather than executing it.\r\n\r\nThis model serves as an educational tool to help IT professionals and developers working in the Oracle APEX environment enhance their understanding of dynamic data handling using BPMN, which can improve their efficiency in developing robust, secure applications.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 3b - Substitution and Bind Syntax_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 4a - Tasks Get Your Work Done!",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 4a - Introduces BPMN Tasks and task types",
        "dgrm_description": "The provided Business Process Model and Notation (BPMN) XML represents a process named “Task Types Tutorial”. The model illustrates various types of tasks in a business process, with an educational focus on how these tasks can be configured within a workflow system called \"Flows for APEX.\" Below is a business summary of the model as it appears in the XML:\r\n\r\n### Business Summary of the Model\r\n\r\n**Overview:**  \r\nThe \"Task Types Tutorial\" is a business process model developed for instructional purposes to demonstrate different task types and their applications within business process management using APEX. This model is aimed at individuals or organizations that are learning about automating workflows using APEX, a tool for low-code application development.\r\n\r\n**Key Features:**\r\n\r\n**Standard Task:** Introduces basic task configurations that serve as placeholders before replacing them with more specific task types during the evolution of the process model into an executable workflow.\r\n\r\n**User Task:** Demonstrates the capability to call an APEX page, or integrate with APEX Human Task components, enabling high interoperability with APEX Workflow components by passing variables, setting actions, and managing user interactions like approvals or data entry.\r\n\r\n**Script Task:** Allows running PL/SQL scripts to perform necessary logic or database operations within the process. Emphasizes using stored procedures for efficiency and reusability.\r\n\r\n**Service Task:** Describes service interactions such as using Gen AI to make recommendations or draft documents, sending emails and running PL/SQL procedures, leveraging APEX Mail Templates for communication tasks.\r\n\r\n**Manual Task:** Represents non-automated, human-centric tasks within the process workflow that are not directly managed by the system, illustrating their behavior akin to standard tasks in earlier software versions.\r\n\r\n**Send and Receive Task:** Facilitates message exchanges between different process instances, enabling inter-process communication modeled through message flows.\r\n\r\n**Business Rule Task:** Integrates machine learning models or credit scoring logic through stored SQL Models or PL/SQL scripts for decision-making tasks within the business process.\r\n\r\n**Annotations:** The model is extensively annotated with educational tips to guide users on how to configure each task type, emphasizing best practices for implementing executable workflows in APEX.\r\n\r\n**Target Audience:**  \r\nThis tutorial is aimed at business analysts, process designers, and APEX developers interested in integrating business logic and automation into workflows using the Flows for APEX platform.\r\n\r\n**Version:**  \r\nLeveraging features from the latest Flows for APEX version, this tutorial incorporates the newest functionalities available to users for effective workflow management and task execution.\r\n\r\nThis comprehensive demonstration of task types within a business process offers valuable insights for optimizing and designing efficient workflows ready for digital transformation.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 4a - Tasks Get Your Work Done!_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 4b - Reminders and Timeouts",
        "dgrm_short_description": "Flows for APEX BPMN Tutorials - part 4b - shows you how to use timer boundary events to implement process timeouts and send reminders",
        "dgrm_description": "The \"Process Tutorial 4b - Timer Boundary Events\" model is a business process model that demonstrates the use of timer boundary events in workflow management. This model, designed using BPMN (Business Process Model and Notation), highlights scenarios such as setting reminders and handling time-outs or deadlines within a business process.\r\n\r\n**Key Components:**\r\n\r\n**Non-Interrupting Timer Boundary Event:**\r\n\r\n*   Demonstrates how to attach a non-interrupting timer boundary event to a task which initiates a parallel path without interrupting the original task if it remains incomplete by a specified time.\r\n*   Example: In this model, if the \"Do Homework\" task is not completed within 20 seconds, a reminder is sent while the homework task continues to be in progress.\r\n\r\n**Interrupting Timer Boundary Event:**\r\n\r\n*   Demonstrates the application of an interrupting timer boundary event, which terminates the ongoing task if not completed by the deadline and redirects the flow along an alternate path.\r\n*   Example: For the \"Submit Budget\" task, if the budget is not submitted within 20 seconds, a default budget is automatically submitted through an interrupting timer.\r\n\r\n**Use Cases:**\r\n\r\n*   **Non-Interrupting Timers:** Ideal for scenarios requiring continuous reminders without stopping the original task, such as recurrent task reminders.\r\n*   **Interrupting Timers:** Suitable for workflows requiring strict deadlines, where automatic action is needed upon timeouts, like closing submission periods.\r\n\r\n**Features:**\r\n\r\n*   Configurable timers for both interrupting and non-interrupting events.\r\n*   The ability to set repetitive triggers for non-interrupting timers.\r\n*   Instructional annotations for understanding the purpose and application of timer events in processes.\r\n\r\n**Application in Business Processes:**\r\n\r\n*   This model can be used as a training tool to educate process designers about implementing time-based control in business workflows.\r\n*   It can also serve as a template for developing business processes requiring automated reminders and deadline management, ensuring efficiency and timeliness.\r\n\r\nOverall, the Process Tutorial 4b model serves as an insightful example for businesses aiming to implement effective process management with the use of timer boundary events to optimize task completion and time management.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 4b - Reminders and Timeouts_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 4c - Task Priority and Due Dates",
        "dgrm_short_description": "Flows for APEX BPMN Tutorials - part 4c - shows how you can set priority and due dates for user tasks to keep things getting done on time.",
        "dgrm_description": "The BPMN (Business Process Model and Notation) provided outlines a structured approach for managing process priorities and due dates within a business workflow. This model is designed to enable businesses to effectively manage and track the scheduling of both process instances and individual tasks, enhancing operational efficiency and task management.\r\n\r\n### Business Summary\r\n\r\n**Objective:**  \r\nThe model provides a structured framework for assigning and managing priorities and due dates to process instances and user tasks within a business process. By incorporating priority levels and due dates, organizations can ensure timely task execution and efficient resource allocation.\r\n\r\n**Key Components:**\r\n\r\n**Start Event:**\r\n\r\n*   Initiates the process flow to set priorities and due dates for tasks.\r\n\r\n**Tasks:**\r\n\r\n*   Several tasks including \"Priorities and Due Dates,\" \"Process Instance Priority and Due Date,\" and \"Task Priority and Due Date,\" guide users through configuring priorities and due dates.\r\n*   Tasks are linked by sequence flows, ensuring a logical progression from setting instance priorities to task-specific priorities.\r\n\r\n**User Task:**\r\n\r\n*   Allows for interactive input regarding task priorities and due dates, utilizing the \"apexPage\" attribute for integration with the Flows for APEX framework.\r\n\r\n**End Event:**\r\n\r\n*   Marks the completion of the scheduling process, ensuring every task has a defined priority and deadline.\r\n\r\n**Annotations and Instructions:**  \r\nThe model includes detailed text annotations providing step-by-step instructions for setting priorities and due dates. Users are instructed on methods to establish these settings using static values, process variables, SQL queries, and expressions. It emphasizes ensuring that due dates include time zone specifications for consistent scheduling across different regions.\r\n\r\n**Business Benefits:**\r\n\r\n*   **Enhanced Task Management:** By systematically prioritizing tasks, businesses can optimize the order in which tasks are tackled, focusing on high-priority actions first.\r\n*   **Operational Efficiency:** Clear due dates help maintain schedules and meet deadlines, which is crucial for time-sensitive projects.\r\n*   **Improved Resource Allocation:** Understanding task priorities helps allocate resources more effectively, minimizing downtime and resource wastage.\r\n*   **Scalability:** The process model is adaptable to various business sizes and complexities, allowing for customization as business requirements grow.\r\n\r\nOverall, this BPMN model serves as a guide for businesses to streamline workflows and ensure that critical tasks are executed in a timely manner with appropriate urgency.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 4c - Task Priority and Due Dates_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 4d - Using an AI Service Task",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 4d - shows how to use a Gen AI Service Task to make decisions and to generate documents as part of your business process.  Requires an AI service to be configured to run.",
        "dgrm_description": "This tutorial workflow demonstrates how to integrate Generative AI, such as GPT, into a Business Process Model and Notation (BPMN) framework to both direct process flow and generate document content. The workflow exemplifies how AI can be leveraged to automate decision-making and content creation within a business process.\r\n\r\nKey Features:\r\n\r\nAI Integration via BPMN Service Tasks:\r\n\r\nUtilizes BPMN Service Tasks to effectively interface with Generative AI, such as GPT, throughout the process.  \r\nDemonstrates how to set up AI Service Tasks to interpret data and generate outcomes that dictate subsequent process paths.  \r\nProcess Flow Direction:\r\n\r\nAI is used to evaluate input data, producing results that guide the process through different decision branches.  \r\nDepending on the AI assessment, the process can take multiple paths, such as requiring additional information (email), directing to human review, confirming an action (fraud detection), or concluding that everything is in order (OK).\r\n\r\nDocument Content Generation:\r\n\r\nIllustrates the use of AI to generate tailored content such as emails, based on insights derived from process data and AI-inferred conclusions.  \r\nThis capability streamlines communication by auto-generating personalized messages or documents which can be dispatched without manual drafting.  \r\nEnhanced Workflow Efficiency:\r\n\r\nBy employing AI, the tutorial highlights how complex decision-making and document generation can be automated, reducing manual workload and process time.  AI-driven instructions enable the workflow to adapt dynamically to a variety of inputs, ensuring scalability and robustness.\r\n\r\nSetting Up AI Service Tasks:\r\n\r\nProvides a step-by-step guide on configuring AI Service Tasks, defining prompt variables, and establishing conditions for AI engagement in the workflow.  \r\nEmphasizes variable setup for prompts and temperature to control AI behavior, ensuring accurate and repeatable processes.  \r\nOutcome:\r\n\r\nParticipants will learn how to configure and utilize AI within a BPMN workflow to automatically determine process pathways and generate necessary documentation. This tutorial not only provides insight into technical setup but also highlights the potential efficiencies and flexibility brought on by integrating AI into business processes.\r\n\r\nConclusion:\r\n\r\nThis tutorial serves as a practical guide for embedding Generative AI into BPMN processes, showcasing its dual capability to provide process direction and generate content. By illustrating these applications, the tutorial fosters an understanding of how AI can be a powerful tool in creating intelligent, responsive business workflows.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 4d - Using an AI Service Task_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5a - Structure your Process with Sub Processes and Calls",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 5a - introduces structuring your processes with sub processes and call activities (sub processes in another diagram).",
        "dgrm_description": "**Overview**  \r\nThe provided BPMN model is titled \"Tutorial 5a - Sub Process and Call Intro\" and is aimed at illustrating key concepts in business process modeling using Business Process Model and Notation (BPMN). This tutorial highlights the use of subprocesses and call activities to streamline and structure business workflows.\r\n\r\n**Key Components**\r\n\r\n**SubProcesses**:\r\n\r\n*   The model begins with the main process that includes a subprocess named \"SubProcess A.\" Subprocesses are integral parts of BPMN as they help simplify complex processes by breaking them into smaller, more manageable components.\r\n*   Within \"SubProcess A,\" there are tasks like \"Task A1,\" \"Task A2,\" \"Task A3,\" and \"Task A4,\" demonstrating parallel execution and convergence.\r\n*   An important feature shown is the ability for subprocesses to contain boundary events, like a reminder or timer, to handle specific occurrences within a defined timeframe.\r\n\r\n**Call Activities**:\r\n\r\n*   The model also incorporates \"Call Activity,\" which allows linking to and executing another BPMN diagram. This feature is crucial for reusing common process components, enhancing consistency and efficiency across processes.\r\n*   The \"Call Another Process Diagram\" activity calls external processes, exemplifying the model's potential for integration and scalability.\r\n\r\n**Diagram Drill-Down**:\r\n\r\n*   The model illustrates both expanded and collapsed subprocesses, allowing users to toggle between detailed and overview perspectives of processes. This feature aids in maintaining a clean, organized model while providing the option to explore details as needed.\r\n\r\n**Use Cases**\r\n\r\n*   **Modular Design**: The use of subprocesses and call activities encourages a modular approach to process design, allowing for easier maintenance and updates.\r\n*   **Process Reusability**: The model advocates for designing reusable process components, which can be beneficial in organizations with multiple overlapping process needs.\r\n*   **Event Handling**: The incorporation of boundary events showcases the model's ability to handle asynchronous events, a common requirement in complex business environments.\r\n\r\n**Conclusion**\r\n\r\nThis BPMN model serves as a foundational guide for leveraging subprocesses and call activities in efficient business process design. It provides insights into organizing processes into manageable units and facilitating process reuse, ultimately contributing to more agile and scalable business operations.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5a - Structure your Process with Sub Processes and Calls_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5b - Introducing Sub Processes",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 5b - shows you the details of how sub processes work.",
        "dgrm_description": "**Introducing Sub Processes**\r\n\r\nThe BPMN model, \"Tutorial 5b - Introducing Sub Processes,\" is a detailed guide to demonstrate the application and benefits of using sub-processes in a business process modeling context. This model is focused on illustrating how sub-processes can encapsulate parts of a business process to enhance clarity and manageability.\r\n\r\nKey Features:\r\n\r\n**Modeling Sub-Processes**: The tutorial showcases the capability of BPMN to encapsulate complexity within a sub-process. The sub-process, named \"SubProcess B,\" is designed to illustrate basic as well as parallel task execution pathways within a larger process structure.\r\n\r\n**Parallel Task Execution**: The model includes a parallel gateway, demonstrating the ability to split and concurrently execute multiple tasks (B2 and B3) within a sub-process, illustrating complex work streams and task management.\r\n\r\n**Nested Sub-Processes**: It features nested sub-processes (B4), adding additional layers of complexity within the main sub-process. This showcases how BPMN can hide intricate details unless necessary, thus providing readability and focus within business process models.\r\n\r\n**Documentation and Learning**: The tutorial is enriched with annotations explaining the purpose and behavior of sub-processes, helping learners understand how sub-process flows interact and depend on each other.\r\n\r\n**User Engagement**: Participants are encouraged to run and observe the model to understand task dependencies and the flow of interactions between parent and sub-processes under different scenarios.\r\n\r\n**Practical Application**: This tutorial serves as an educational tool for businesses or process developers to apply BPMN efficiently, ensuring that complex business processes are manageable and comprehensible.\r\n\r\nConclusion:\r\n\r\nThis model is a valuable resource for learning about BPMN and the benefits of sub-processes in designing efficient and understandable business process models. It provides insights into modeling techniques that can manage complex workflows by simplifying the visible process structure, helping organizations streamline operations through strategic encapsulation of tasks.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5b - Introducing Sub Processes_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5c - Handling Sub Process Error and Escalation Events",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 5c - shows how you can use error and escalation events inside a sub process to trigger actions in the parent process",
        "dgrm_description": "**SubProcess Errors and Escalations**\r\n\r\n**Overview:**  \r\nThis BPMN model, titled \"Tutorial 5c - SubProcess Errors and Escalations,\" serves as an instructional tool. It is designed to demonstrate the handling of errors and escalations within subprocesses, providing a structured approach to managing workflow interruptions and alerts in a process-driven environment.\r\n\r\n**Key Components:**\r\n\r\n1.  **Start and End Events:** The model begins with a start event and concludes with several end events, ensuring the process lifecycle is well defined.\r\n2.  **Main Tasks and SubProcesses:** The process comprises several tasks, including \"Tutorial 5c SubProcess Errors and Escalations\" and nested subprocesses like SubProcess B, B4, and their accompanying tasks (e.g., B1 to B6).\r\n3.  **Gateways and Flows:** Parallel and exclusive gateways guide the workflow, managing the path based on conditional logic (e.g., whether \"Everything OK?\").\r\n4.  **Error and Escalation Management:**\r\n    *   **Error Events:** SubProcess B4 ends with an Error End Event, triggering an Error Boundary Event that directs the flow to an error-handling path if issues arise.\r\n    *   **Escalation Events:** The model incorporates Escalation Intermediate Throw Events, signaling the need for additional processing without interrupting the main workflow. The escalation events are caught by Non-Interrupting Escalation Catch Events, which initiate parallel processes such as notifying a manager via email for assistance.\r\n\r\n**Functional Highlights:**\r\n\r\n*   **Non-interrupting features:** By using non-interrupting events, the model ensures the primary workflow continues even as additional processes handle escalations or errors, maintaining operational efficiency.\r\n*   **Error Handling Pathway:** Errors within subprocesses are managed through designated pathways, demonstrating a fail-safe plan that diverts the workflow to error handlers.\r\n\r\n**Application and Utility:**  \r\nThis BPMN model is an instructional resource that exemplifies the application of escalations and error events in business process management. It is particularly valuable for those looking to enhance their understanding of process control and exception handling in complex workflows. Ideal for training, this model illustrates real-world scenarios where alerts and error signaling are critical components of dynamic process management.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5c - Handling Sub Process Error and Escalation Events_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5d - Using CallActivities to call another diagram",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 5d - shows how to call a common, reusable process definition part stored in a separate diagram.  The called diagram executes as part of the parent process, allowing reuse of common components.",
        "dgrm_description": "**Introduction:**  \r\nThe Customer Sales Promotion Process is an example of a business process that uses a BPMN Call Activity.  It is a structured workflow designed to efficiently manage sales promotions targeted at specific customer segments. The process aims to maximize sales conversion by systematically engaging potential customers, processing orders, and ensuring timely delivery.  The process uses a BPMN Call Activity to include a sub process component that has already been created in another diagram.\r\n\r\n**Key Components:**\r\n\r\n**Initiation:**\r\n\r\n*   The process begins when a customer is identified on the promotion target list.\r\n*   Initiating this process sets the stage for targeted customer engagement.\r\n\r\n**Customer Engagement:**\r\n\r\n*   A task is carried out to make a customer call for the sales promotion. This task is designed to engage the customer, introduce promotional offers, and encourage purchase decisions.\r\n\r\n**Decision Gateway:**\r\n\r\n*   Based on the customer interaction, the process diverges into multiple paths:\r\n    *   **Order Placement:** If the customer places an order, processing steps are initiated.\r\n    *   **Information Request:** If the customer requests more information, details are selected and sent to them.\r\n\r\n**Order Processing:**\r\n\r\n*   In case of an order, this process leverages an existing order processing system through a Call Activity. This 'Process Order' task streamlines tasks like order booking, picking, packing, and shipping without redefining them, utilizing the pre-existing infrastructure of the supply chain.\r\n\r\n**Follow-up:**\r\n\r\n*   If customers require follow-ups, they are marked for a subsequent call.\r\n*   Automated reminders and scheduled communications ensure continuous engagement with the customer.\r\n\r\n**Completion:**\r\n\r\n*   Successful completion of tasks (order processing or sending information) results in appropriate end messages, such as \"item sold and delivered\" or \"info sent.\"\r\n\r\n**Promotion Exit:**\r\n\r\n*   If the customer opts out of the promotion, they are removed from the active list.\r\n\r\n**Benefits:**\r\n\r\n*   **Efficiency:** By automating routine tasks and integrating existing order processing workflows, this model minimizes redundancy and ensures a seamless flow from customer engagement to order fulfillment.\r\n*   **Scalability:** Modular design with Call Activities allows easy incorporation of updates or expansions without disrupting the core workflow.\r\n*   **Customer-Centric:** Focused follow-up and information dissemination paths ensure the process addresses varying customer needs effectively.\r\n\r\n**Conclusion:**  \r\nThe Customer Sales Promotion Process improves outreach efficiency and customer satisfaction by combining strategic customer engagement with streamlined operational processes. The dynamic model allows for flexible adaptation to various business needs while maintaining process integrity.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5d - Using CallActivities to call another diagram_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5e - ship Goods (Called by Tutorial 5d)",
        "dgrm_short_description": null,
        "dgrm_description": null,
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5e - ship Goods (Called by Tutorial 5d)_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 5f - Making a Diagram Callable",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 5f - is a simple tutorial to show how a diagram containing a business process can be used as part of other process definitions by making it callable.",
        "dgrm_description": "**Making a Diagram Callable**\r\n\r\n**Overview:**  \r\nThe process described in this BPMN (Business Process Model and Notation) diagram, titled \"Tutorial 5F - Making a Diagram Callable,\" provides a systematic procedure for configuring a BPMN diagram to become callable by other diagrams. This tutorial is designed to guide users through a step-by-step approach to enhance model interoperability within BPMN workflows.\r\n\r\n**Process Steps:**\r\n\r\n**Initiation:**\r\n\r\n*   The process begins with a Start Event, signaling the commencement of making a diagram callable.\r\n\r\n**Step A:**\r\n\r\n*   Execute the task labeled \"Step A,\" initiating the fundamental changes needed for setup.\r\n\r\n**Setting Callable Properties:**\r\n\r\n*   The task \"Set is Callable = Yes\" instructs users to navigate to the Properties Panel and set the Execution parameter to 'Is Callable = Yes.' This step emphasizes the process object's selection and adjustment to ensure it can be invoked by other processes.\r\n\r\n**In/Out Variable Specifications:**\r\n\r\n*   In the task \"Set In/Out Variable Specs,\" users are instructed to define essential input and output variables within the Properties Panel. This step is crucial for establishing the communication protocols necessary for a callable diagram.\r\n\r\n**Completion:**\r\n\r\n*   The process concludes with an End Event, indicating the successful implementation of a callable configuration, ready to be utilized by other BPMN diagrams.\r\n\r\n**Annotations and Notes:**\r\n\r\n*   The diagram includes several text annotations offering detailed instructions, such as selecting process objects, specifying input/output mappings, and opening statements regarding the ease and purpose of making a diagram callable.\r\n\r\n**Value Proposition:**  \r\nBy providing a clear, structured methodology for making BPMN diagrams callable, this tutorial empowers business process designers to enhance workflow flexibility and reusability. It enables the seamless integration of processes, facilitating efficient process execution across various BPMN projects. This capability is particularly valuable for organizations aiming to optimize their business process management by leveraging modular, reusable BPMN components.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 5f - Making a Diagram Callable_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 6a - Collaborations, Lanes and Reservations",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 6a - expands our BPMN diagrams to include lanes, showing who will perform activities, and how tasks are assigned.",
        "dgrm_description": "This BPMN tutorial is part of the Flows for APEX series, specifically designed to introduce and highlight the concept of lanes in process modeling. The tutorial emphasizes the importance of lanes, task assignment, and task reservation, which have not been included in the previous tutorials.\r\n\r\n**Key Concepts:**\r\n\r\n**Lanes:**\r\n\r\n*   The model incorporates three distinct lanes representing different organizational roles: Sales, Finance, and Shipping. Each lane visually distinguishes the tasks and responsibilities specific to each department, providing clarity on who performs each task in the process.\r\n\r\n**Task Assignment and Role Clarity:**\r\n\r\n*   **Sales Lane:** Tasks such as \"Take Order\" and handling customer confirmations are assigned to the sales team, establishing clear ownership over the initial stages of the process.\r\n*   **Finance Lane:** Financial tasks, including \"Draft Invoice\" and \"Approve Discounts,\" are allocated to the finance team, ensuring that all monetary decisions adhere to company policies and accounting standards.\r\n*   **Shipping Lane:** The shipping department is responsible for logistical tasks such as verifying customer eligibility (e.g., embargoed status) and preparing shipments, ensuring that goods are delivered efficiently and compliantly.\r\n\r\n**Enhanced Process Visibility:**\r\n\r\n*   By utilizing lanes, the model provides an easy-to-understand visual representation of departmental responsibilities, making it an effective tool for both new and experienced users of BPMN.\r\n*   This clarity is further underscored during process monitoring, where users can quickly identify which lane and role each task belongs to, enhancing management oversight and process control.\r\n\r\n**Tutorial Focus:**  \r\nWhile the specific business process details are secondary, the core objective of this tutorial is to illustrate the practical advantages of using lanes in BPMN, particularly in terms of task management and role assignment. By implementing these concepts, users can achieve more structured and effective process models.\r\n\r\nIn summary, this tutorial is a stepping stone in the BPMN series, particularly beneficial for users seeking to improve process documentation and execution through clear delineation of roles and responsibilities within their models.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 6a - Collaborations, Lanes and Reservations_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 6b - Lanes and More Lanes",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 6b - looks in more detail at BPMN lanes, and shows how they can be sub-divided into sub lanes.",
        "dgrm_description": "**Introduction to Child Lanes and Role Mapping**\r\n\r\n---\r\n\r\nWelcome to the Flows for APEX tutorial, where we'll explore the use of child lanes within a BPMN model and demonstrate how certain lanes can be mapped to APEX roles. This tutorial will help you understand how to structure your processes using lanes and child lanes, providing clear role assignments within your applications.\r\n\r\n**Tutorial Overview: My Revenue Process**\r\n\r\nIn this tutorial, we are focusing on a process model called \"My Revenue Process.\" This model illustrates a streamlined approach to handling sales deals and the subsequent financial processes, like commission payments. By using lanes and sub-lanes (child lanes), you can create a detailed representation of functional roles and responsibilities within your organization.\r\n\r\n### Key Concepts:\r\n\r\n**Lanes and Child Lanes:**\r\n\r\n*   **Lanes:** These are used to represent different departments or functional areas such as Sales and Finance in a process model.\r\n*   **Child Lanes:** These are subdivisions within a parent lane that allow for finer granularity. For example, within the Finance lane, you can have a child lane for the \"Revenue Recognition Team.\"\r\n\r\n**Mapping Lanes to APEX Roles:**\r\n\r\n*   Lanes can be associated with specific roles defined in your privilege management system (e.g., APEX).\r\n*   This role mapping facilitates task assignment, ensuring that tasks are directed to individuals or teams with the appropriate access and responsibilities.\r\n\r\n### Process Flow Explanation:\r\n\r\n**Sales Lane:**\r\n\r\n*   **Activities:** This lane includes tasks like \"Enter Sales Deal\" and \"Confirm Sales Team Engagement Plan.\"\r\n*   **APEX Role Mapping:** Not mapped to a specific role in this example, as it is more of a conceptual lane for process illustration.\r\n\r\n**Finance Lane:**\r\n\r\n**Parent Lane:** Represents the overall Finance department.\r\n\r\n**Child Lanes:**\r\n\r\n*   **Revenue Recognition Team:**\r\n    *   **Sub-Lanes:**\r\n        *   **Clerk Role:** Mapped to `FIN-REV-REC-CLERK`, responsible for initial tasks in the revenue recognition process.\r\n        *   **Manager Role:** Mapped to `FIN-REV-REC-MANAGER`, focusing on task approval and oversight.\r\n*   **Sales Compensation:**\r\n    *   **Role:** Mapped to `FINANCE-COMP-AP`, handling tasks like \"Setup Commission Payment\" and \"Make Staff Payment.\"\r\n\r\n### Tutorial Steps:\r\n\r\n**Creating Lanes and Child Lanes:**\r\n\r\n*   In your BPMN tool, define a LaneSet and add lanes such as \"Sales\" and \"Finance.\"\r\n*   To create child lanes, insert a CHILD LANESET within a parent lane (e.g., within Finance, add a child laneset for the Revenue Recognition Team).\r\n\r\n**Assigning APEX Roles:**\r\n\r\n*   Select the appropriate lane or sub-lane.\r\n*   In the Properties Panel, specify if the lane maps to an APEX Role.\r\n*   Choose the default ROLE for tasks in this lane (e.g., `FIN-REV-REC-CLERK` for the Clerk sub-lane).\r\n\r\n**Utilizing Lanes in Process Design:**\r\n\r\n*   Use lanes to assign tasks to the right roles to ensure streamlined task routing and execution.\r\n*   Review the process flow ensuring all activities are logically connected and assigned to the correct lanes/sub-lanes.\r\n\r\nBy the end of this tutorial, you should be able to effectively utilize lanes and child lanes in Flows for APEX, create logical process structures and ensure appropriate task assignments through role mapping. This enables a more organized and role-specific workflow execution within your organization's processes.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 6b - Lanes and More Lanes_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 6c - User Assignment - Putting it all together",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 6c - looks at the details of task assignment, including how lanes (sometimes) you might want to map BPMN Lanes to Oracle roles.",
        "dgrm_description": "## Flows for APEX Tutorial: Understanding Lanes and Task Assignment\r\n\r\nIn this tutorial, we will walk through a sample _Expense Reimbursement Process_ modeled using Flows for APEX, focusing on the concepts of Lanes and Task Assignment. This process automates how employees submit expense claims and how these claims are approved and paid within an organization.\r\n\r\n### Overview of Process Components\r\n\r\n**Lanes:**\r\n\r\n*   Lanes are used to organize and categorize the various participants and roles involved in a process.\r\n*   In our model, lanes help define which tasks are assigned to specific people or parties, establishing clear role responsibilities.\r\n\r\n**Task Assignment:**\r\n\r\n*   Task Assignment in Flows for APEX is central to determining who performs each task.\r\n*   Our process uses **SQL Queries** to dynamically assign tasks based on data within the APEX database.\r\n\r\n### Step-by-Step Process Breakdown\r\n\r\n#### Setup of Lanes\r\n\r\n**Employee Lane:**\r\n\r\n*   This lane encompasses tasks that any employee can initiate, specifically submitting and potentially reworking an expense claim.\r\n*   Task: \"Make Expense Claim\" is initiated by any company employee.\r\n\r\n**Line Manager Lane:**\r\n\r\n*   This lane pertains to tasks handled by the direct supervisor of the employee who submitted the claim.\r\n*   Task: \"Manager Review\" includes an approval or rejection stage for claims, assigned to the employee's direct manager via a SQL query.\r\n\r\n**Finance – ACCt Payable Lane:**\r\n\r\n*   Designed for the Finance personnel responsible for processing payments once a claim is approved.\r\n*   Tasks like \"Arrange Payment\" and \"Make Payment\" are included here, assigned to users holding the Finance - ACCts Payable role.\r\n\r\n#### Task Assignment Explained\r\n\r\n**Employee Task Assignment:**\r\n\r\n*   When an employee files a claim, any subsequent rework is automatically reassigned to them by using the `ORIGINATOR` variable.\r\n*   SQL Example:\r\n\r\nsql\r\n\r\n```sql\r\nselect ename from emp where empno = :F4A$ORIGINATOR\r\n```\r\n\r\n**Manager Task Assignment:**\r\n\r\n*   To ensure the correct manager reviews and approves or disapproves the expense claim, a SQL query fetches the manager’s details from the employee database.\r\n*   SQL Example:\r\n\r\nsql\r\n\r\n```sql\r\nselect mgr.ename from emp mgr join emp originator on originator.mgr = mgr.empno where originator.empno = :F4A$ORIGINATOR\r\n```\r\n\r\n**Finance Task Assignment:**\r\n\r\n*   Tasks are assigned based on predefined roles. Anyone holding the **FINANCE-AP-EXPENSES** role can execute payment tasks.\r\n*   This does not require individual user assignment, simplifying workload distribution.\r\n\r\n### Benefits of Using Lanes and Task Assignment\r\n\r\n*   **Organized Workflow:** Lanes provide a visual representation of who is responsible for each task, making it easier to understand role-based responsibilities.\r\n*   **Automatic Task Routing:** SQL-driven task assignment ensures tasks are automatically routed to the correct user based on current database values, reducing manual intervention.\r\n*   **Improved Efficiency and Accountability:** Clearly defined processes ensure that only authorized users can process respective tasks, maintaining integrity and auditability throughout the workflow.\r\n\r\n### Conclusion\r\n\r\nBy understanding and utilizing Lanes and Task Assignment, you can create effective, automated workflows in Flows for APEX that adapt to real business needs and maintain clarity and accountability throughout the process. This approach streamlines the handling of expense claims from initiation to payment, ensuring the process is both efficient and transparent.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 6c - User Assignment - Putting it all together_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 7a - MessageFlow Basics",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 7a - introduces inter-process communication between collaborating processes - using BPMN message flow.  Executing this tutorial requires the Flows for APEX Enterprise Edition.",
        "dgrm_description": "**Overview:**  \r\nThe BPMN (Business Process Model and Notation) diagram focuses on complex interactions between multiple business processes through message flows. The model captures key scenarios where processes communicate and coordinate by exchanging messages. This efficient messaging system allows for seamless interaction, streamlining operations while ensuring clarity on process roles.  \r\n  \r\nExecuting this diagram requires the Flows for APEX Enterprise Edition, which supports all of the message flow tasks and events in this diagram.  If you only have the Community Edition but are curious to see how this works, you can still look at the model and try to understand it from the process definition.\r\n\r\n**Key Components:**\r\n\r\n**Collaboration & Participants:**\r\n\r\n*   Three main processes are involved:\r\n    *   **My Process:** The core process depicted.\r\n    *   **Another Process:** Shows the interaction with another known process.\r\n    *   **Empty Pool (Black Box):** Represents an external process with unknown internal workings but engages in message exchanges.\r\n\r\n**Message Flows:**\r\n\r\n*   Highlight the communication channels between processes.\r\n*   Message flows connect activities across different pools (process boundaries), enabling synchronization and coordination between independent processes.\r\n\r\n**Task Elements:**\r\n\r\n*   **Send and Receive Tasks:** Tasks that send or receive messages, indicating an essential part of process communication.\r\n*   **Gateway Controls:** Manage decision-making and the routing of message flows between processes.\r\n*   **Boundary Events:** Indicate specific events interrupting or not interrupting associated tasks based on message receipt.\r\n\r\n**Integration Features:**\r\n\r\n*   **Intermediate Events and Catch/Throw Mechanisms:** Facilitate asynchronous interactions allowing processes to pause execution until a required message is received or to initiate an action once a message is sent.\r\n*   **Call Activities:** Allow reusability and integration of subprocesses across distinct process structures.\r\n\r\n**Implementation Benefits:**\r\n\r\n*   **Efficiency Improvement:** Streamlined communication paths cut down the need for manual interventions and reduce potential errors in process interactions.\r\n*   **Scalability:** The modular design ensures easy adaptation and scaling by adding or modifying existing message flows and task sequences.\r\n*   **Transparency and Control:** Provides visibility into the interactions among various processes and numerous decision points, aiding in quick identification and resolution of bottlenecks or issues.\r\n\r\nThis BPMN model effectively demonstrates how message flow strategies can be employed to improve process efficiency, ensuring seamless and real-time communication between diverse processes within an organization.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 7a - MessageFlow Basics_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 7b - Process Collaboration and MessageFlow Example (EE)",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 7b - provides a working model of process collaboration and message flow between 3 collaborating processes.",
        "dgrm_description": "The provided BPMN model outlines a comprehensive business process that coordinates interactions between three primary participants: Customer, Supplier, and Shipper. This model is designed to facilitate the seamless handling of orders and deliveries within a supply chain network, utilizing message flows to ensure efficient communication and status updates across all parties involved.\r\n\r\n#### Key Participants:\r\n\r\n1.  **Customer**: Initiates the process by generating a Purchase Order (PO) and is responsible for order completion and confirmation upon receiving invoices and goods.\r\n2.  **Supplier**: Receives the PO from the Customer, prepares the corresponding Sales Order (SO), and manages the preparation of goods for shipment.\r\n3.  **Shipper**: Executes shipment based on the Supplier’s instructions and confirms delivery with both the Supplier and the Customer.\r\n\r\n#### Workflow Overview:\r\n\r\n**Order Initiation**:\r\n\r\n*   The Customer identifies the need for parts and sends a PO to the Supplier.\r\n*   The Supplier acknowledges the PO, generates a SO, and communicates it back to the Customer.\r\n\r\n**Order Processing**:\r\n\r\n*   The Supplier prepares goods for the order, creating conditions necessary for shipment.\r\n*   The Supplier sends shipping instructions to the Shipper.\r\n\r\n**Shipping and Delivery**:\r\n\r\n*   The Shipper prepares and executes the shipment.\r\n*   Upon delivery, the Shipper sends a Delivery Order to the Customer, confirming the dispatch.\r\n\r\n**Order Completion**:\r\n\r\n*   The Customer receives the Delivery Order and Invoice, leading to the completion of the transaction cycle.\r\n*   Delivery Confirmation is sent back to the Supplier, closing the loop of communication.\r\n\r\n**Invoice and Payment**:\r\n\r\n*   The Supplier concludes the process by sending the final invoice to the Customer, based on the completed delivery confirmation.\r\n\r\n#### Technical Capabilities:\r\n\r\n*   **Message-Driven Architecture**: The model relies on messageStart and messageEnd events, enhancing interoperability between parties by using real-world reference keys instead of GUIDs (Globally Unique Identifiers).\r\n*   **Scalability for Enterprise Edition**: Taking advantage of proprietary features, the model optimally utilizes advanced functionalities offered in enterprise-level systems for deployment.\r\n\r\n#### Business Insights:\r\n\r\nThis BPMN model effectively demonstrates utilization of structured processes to manage complex supply chain operations. By establishing clear, sequential communication and processes between the Customer, Supplier, and Shipper, businesses can ensure accuracy, timeliness, and reliability in fulfilling orders. Additionally, the use of defined message flows reduces the potential for errors associated with manual data transfer, thus improving overall efficiency and customer satisfaction.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 7b - Process Collaboration and MessageFlow Example (EE)_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 7e - Introduction to Iterations and Tasks",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 7e - introduces multi-instance tasks and BPMN loops.  This is an Enterprise Edition only feature.",
        "dgrm_description": "The business model provided is a workflow process diagram created using Business Process Model and Notation (BPMN). This model outlines a comprehensive overview of a workflow utilizing loops and iterators within a business process. Here's a brief summary of the business workflow:\r\n\r\n**Initialization (Start Event)**: The process begins with a \"Start\" event, triggering the subsequent tasks in the workflow.\r\n\r\n**Pre-Split Task (Activity\\_PreSplit)**: The initial task, \"Pre-Split,\" prepares the process for subsequent splitting into parallel or sequential tasks.\r\n\r\n**Parallel Workflow Branching (Gateway\\_Split)**: The workflow is split into parallel paths using a parallel gateway. Each path represents different sections of a process executed concurrently.\r\n\r\n**Task Sequences**:\r\n\r\n**Sequence A (List Processing)**:\r\n\r\n*   \"A1-List\": Retrieves a list of employee names from a department into a process variable.\r\n*   \"A2\": Iterates over the list sequentially until a certain condition is met.\r\n*   \"A3\": Finalizes actions on the list items.\r\n\r\n**Sequence B (Array Processing)**:\r\n\r\n*   \"B1-Array\": Retrieves employee details as JSON data (an array) into a process variable.\r\n*   \"B2\": Iterates over the JSON array in parallel until a condition is fulfilled.\r\n*   \"B3\": Processes each JSON item separately.\r\n\r\n**Sequence C (Direct Query Processing)**:\r\n\r\n*   \"C1-Query\": Rather than creating a variable in this step, we go straight to C2…\r\n*   \"C2\": Executes a database query to directly retrieve employee details , and uses the query result in parallel, again until a certain completion condition is achieved.\r\n*   \"C3\": Finalizes the handling of query results.\r\n\r\n**Sequence D (Loop Processing)**:\r\n\r\n*   \"D1-Loop\": Initiates a looping process.\r\n*   \"D2\": Continues the loop until a specified condition is met.\r\n*   \"D3\": Final processing after the loop completes.\r\n\r\n**End Events**: Each sequence concludes with an \"End\" event, marking the completion of the respective process branch.\r\n\r\n**Annotations**: Descriptive text annotations provide insights into each task and sequence, explaining the nature and requirements of iterations and loops.\r\n\r\nThis process model shows a structured approach to manage workflows using iterations, loops, and parallel processing, ideal for systems where tasks need to be executed in sequences or loops based on the conditions derived from queries or lists. It is noted that the use of iterations and loops requires an Enterprise Edition setup, ensuring scalability and robustness in complex business scenarios.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 7e - Introduction to Iterations and Tasks_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 7f - Iterations and Looped Sub Processes",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - Part 7f - extends multi-instance activities to include sub processes... Again, this requires the Enterprise Edition.",
        "dgrm_description": "#### Tutorial Overview\r\n\r\nIn this tutorial, we will explore how to utilize Flows for APEX to implement multi-instance and looping constructs within subprocesses, enhancing your business process capabilities. This approach is particularly useful for handling repetitive tasks and processing lists or arrays of data efficiently.\r\n\r\n#### Process Objective\r\n\r\nThe goal is to demonstrate a business process where we sequentially iterate over employee data, executing various operations using multiple instances and looping within subprocesses. This setup will enable you to handle large datasets effectively by processing them in manageable, automated chunks.\r\n\r\n#### Key Components of the Process\r\n\r\n**Start Event:** The process initiates with a \"Start\" event, serving as the entry point into the workflow.\r\n\r\n**Pre-Split Task:** A \"Pre-Split\" activity performs initial data setup, preparing for downstream operations.\r\n\r\n**Parallel Gateway (Split):** This gateway divides the workflow into four distinct, parallel paths (A, B, C, and D), each handling different data processing methods but following a similar iteration strategy.\r\n\r\n#### Individual Paths\r\n\r\n**Path A - List Processing:**\r\n\r\n*   **Objective:** Retrieve and process a list of employee names.\r\n*   **SubProcess (A2):** Implements multi-instance looping over a list obtained via SQL query, terminating after processing three records.\r\n\r\n**Path B - Array Processing:**\r\n\r\n*   **Objective:** Work with JSON arrays containing employee names and numbers.\r\n*   **SubProcess (B2):** Uses multi-instance looping to iterate over an array structure with a similar completion condition to Path A.\r\n\r\n**Path C - Query-Based Processing:**\r\n\r\n*   **Objective:** Execute a direct SQL query to fetch and process employee details.\r\n*   **SubProcess (C2):** Engages in query-based iteration, ensuring at least three records are processed before completion.\r\n\r\n**Path D - Loop Query Processing:**\r\n\r\n*   **Objective:** Perform iterative data retrieval through looping queries.\r\n*   **SubProcess (D2):** Similar looping logic is applied as in other paths, focusing on sequential completeness.\r\n\r\n#### Execution and Completion\r\n\r\nEach path concludes with an end event indicating the completion of that subprocess. The execution model ensures parallel processing, thereby increasing throughput without compromising on process integrity.\r\n\r\n#### Learning Points\r\n\r\n*   **Multi-Instance SubProcesses:** Enable processing of multiple data items in parallel or sequence, with shared logic and completion conditions.\r\n*   **Looping Constructs:** Allow repetitive execution of subprocesses until specific criteria are satisfied, adaptable to changing business needs.\r\n*   **Data Handling:** Demonstrates SQL and JSON integration for dynamic data manipulation within workflows.\r\n\r\n#### Practical Application\r\n\r\nBy the end of this tutorial, participants will understand how to design and deploy advanced subprocesses capable of handling repetitive data manipulation tasks efficiently. This methodology not only streamlines operations but also provides a scalable solution suitable for enterprise environments using Flows for APEX.\r\n\r\n#### Tips\r\n\r\n*   **Parallel vs. Sequential Execution:** Remember that \"paraLLeL\" has three 'L's which can be visualized as three parallel lines—a mnemonic to distinguish parallel processing from sequential.\r\n*   **Enterprise Edition Requirements:** Certain features may only be available with the Enterprise Edition, so verify your environment's capabilities.\r\n\r\nExplore this model in your Flows for APEX environment to grasp the power of multi-instance and looping constructs in subprocesses!",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 7f - Iterations and Looped Sub Processes_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 7g - Iterations and Looped Nested Sub Processes",
        "dgrm_short_description": "Flows for APEX BPMN Tutorial - part 7g - extends our multi-instance and looping scenario to show nested sub-processes, where both the parent and child are multi-instance.  Powerful and potentially complex!  Requires Enterprise Edition.",
        "dgrm_description": "**Model Overview:**\r\n\r\nThe model presented is a Business Process Model and Notation (BPMN) diagram specifically designed to demonstrate a process known as \"Tutorial 7g - Nested Parallel SubProcess Iterations.\" This process showcases the complex implementation of nested parallel and sequential subprocess iterations using BPMN structures, with the specific context of managing employee data associated with different departments.\r\n\r\n**Key Components:**\r\n\r\n**Pre-split Initialization:**\r\n\r\n*   The process begins with a \"Pre-Split\" task where preparatory steps are undertaken before the work is divided into multiple parallel paths.\r\n\r\n**Parallel Tasks:**\r\n\r\n*   Following the initialization, a parallel gateway splits the process into three distinct paths:\r\n    *   **Path A:** Focuses on listing employees (EmpList) from department 20, iterating through them with a nested sequential subprocess (A2) that performs further iterations over another list from department 30 employees.\r\n    *   **Path B:** Utilizes an array to iterate over employees with specific details (empno) from department 20, with a nested parallel subprocess that iterates over department management tasks (B2b).\r\n    *   **Path C:** Relies on a query execution fetching employee details from department 20, proceeding through a series of tasks and loop characteristics (C2) for detailed handling and iteration.\r\n\r\n**Completion Condition:**\r\n\r\n*   Each subprocess iteration contains a completion condition, ensuring loops adhere to business rules such as limiting iterations to a specified number to prevent infinite loops and optimize processing efficiency.\r\n\r\n**Output and Documentation:**\r\n\r\n*   The process variables are carefully documented, with annotations included to describe the input queries, list generation, and variable data structures, enhancing clarity and ease of understanding for stakeholders.\r\n\r\n**Business Benefits:**\r\n\r\n**Scalability and Efficiency:**\r\n\r\n*   The use of parallel and nested subprocess iterations allows for scalable processing of large datasets, enhancing efficiency in managing workflows that involve complex data interactions.\r\n\r\n**Flexibility and Customization:**\r\n\r\n*   The BPMN model is designed to allow customization to fit varying business needs by selecting which iterations or subprocesses to focus on, improving adaptability to changing requirements.\r\n\r\n**Improved Data Management:**\r\n\r\n*   By segmenting tasks into parallel and sequential components, organizations can better manage data, reduce processing times, and increase the accuracy of data processing tasks.\r\n\r\n**Comprehensive Documentation:**\r\n\r\n*   Detailed annotations and described iterations provide a clear understanding for stakeholders, aiding decision-making processes and aligning process execution with business objectives.\r\n\r\n**Conclusion:**\r\n\r\nThis BPMN model exemplifies advanced business process management techniques, facilitating improved automation, management of employee data, and iteration over complex datasets. The structured approach towards nested subprocess iterations demonstrates a strategic alignment with enhancing organizational efficiency and decision-making capabilities.",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "released",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 7g - Iterations and Looped Nested Sub Processes_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 8a - The Full Monty (the top half!)",
        "dgrm_short_description": null,
        "dgrm_description": null,
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "draft",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 8a - The Full Monty (the top half!)_25.1.bpmn"
    },
    {
        "dgrm_name": "Tutorial 8c - Background Session Configuration",
        "dgrm_short_description": "Flows for APEX Tutorial series - Guidance on setting up Background Session information so that timers and other background steps work correctly.",
        "dgrm_description": "Welcome to the \"Tutorial 8c: Configuring Background Session Info,\" where you will learn how to manage background session configurations in the Flows for APEX environment. This tutorial is essential for understanding how to execute workflows initiated outside the direct context of an APEX session, such as through timers or automated processes.\r\n\r\n### **Tutorial Steps:**\r\n\r\n**Introduction to Background Session Configuration**:\r\n\r\n*   We start with an overview of what background session configuration entails and why it is important for processes that initiate from outside an APEX session, particularly in automated or timer-triggered scenarios.\r\n\r\n**Understanding the General Rules**:\r\n\r\n*   You will get familiar with the general guidelines for configuring background sessions, ensuring consistency and reliability even when the standard APEX sessions are unavailable.\r\n\r\n**Navigating Configuration Decision Points**:\r\n\r\n*   **Object Configurations**: Learn how to check for specific configurations related to process objects. These configurations are prioritized if available.\r\n*   **Diagram-Level Configurations**: If object-specific configurations are not present, you will learn how to verify and utilize configurations set at the process diagram level.\r\n*   **System Defaults**: In the absence of the above configurations, you'll understand how to leverage system-wide defaults, ensuring processes proceed without errors.\r\n\r\n**Utilizing Available Configurations**:\r\n\r\n*   You will be guided on how to apply these configurations efficiently. Whether they're object-specific, diagram-level, or defaults, the goal is to seamlessly simulate necessary APEX session parameters.\r\n\r\n**Setting Up Configurations**:\r\n\r\n*   The tutorial will teach you how to set critical variables (application ID, page ID, and username) before events such as timers. These variables are vital for the smooth execution of workflows that rely on APEX sessions.\r\n\r\n### **Additional Insights:**\r\n\r\n**For Timer Events**: Specific instructions on how to set process variables prior to timer-triggered processes, ensuring the required session information is present when needed.\r\n\r\n**Fallback Hierarchy**: Understand the fallback hierarchy, from process-specific variables to process diagram configurations, and finally to system-default values, ensuring comprehensive coverage in various scenarios.\r\n\r\n### **Purpose:**\r\n\r\nThis tutorial is designed to equip you with the skills to handle activities reliant on APEX sessions, even in automated or external contexts. By the end, you should be able to prevent session-related execution errors and maintain operational efficiency and integrity within your Flows for APEX applications.\r\n\r\nDive into the tutorial to master background session configurations and enhance your workflow management skills in APEX!",
        "dgrm_icon": "fa-notebook fam-information fam-is-info",
        "dgrm_version": "25.1",
        "dgrm_status": "draft",
        "dgrm_category": "Tutorials",
        "file": "Tutorial 8c - Background Session Configuration_25.1.bpmn"
    }
]