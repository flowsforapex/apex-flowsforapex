-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-09-29 10:41:45 CEST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2

-- edited by Richard Allen (Oracle) Feb 2022
-- (c) Copyright, Oracle Corporation and/or its associates.  2020-2023.
-- edited by Richard Allen (Flowquest) Jan 2024
-- (c) Copyright, Flowquest Limited and/or its associates. 2024-25


-- predefined type, no DDL - SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE flow_connections (
    conn_id           NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    conn_bpmn_id      VARCHAR2(50 CHAR) NOT NULL,
    conn_dgrm_id      NUMBER NOT NULL,
    conn_name         VARCHAR2(200 CHAR),
    conn_src_objt_id  NUMBER,
    conn_tgt_objt_id  NUMBER,
    conn_tag_name     VARCHAR2(50 CHAR),
    conn_origin       VARCHAR2(50 CHAR),
    conn_is_default   NUMBER DEFAULT 0 NOT NULL,
    conn_sequence     NUMBER,               
    conn_attributes   CLOB      
);  

ALTER TABLE flow_connections ADD CONSTRAINT conn_pk PRIMARY KEY ( conn_id );

ALTER TABLE flow_connections ADD CONSTRAINT conn_uk UNIQUE ( conn_dgrm_id,
                                                             conn_bpmn_id );

ALTER TABLE flow_connections ADD CONSTRAINT conn_default_ck CHECK ( conn_is_default IN ( 0, 1 ) );

alter table flow_connections add constraint conn_attributes_ck check ( conn_attributes is json );

CREATE TABLE flow_diagrams (
    dgrm_id                 NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ) NOT NULL,
    dgrm_name               VARCHAR2(150 CHAR) NOT NULL,
    dgrm_version            VARCHAR2(10 CHAR) DEFAULT '0' NOT NULL,
    dgrm_status             VARCHAR2(10 CHAR) DEFAULT 'draft' NOT NULL,
    dgrm_category           VARCHAR2(30 CHAR),
    dgrm_last_update        TIMESTAMP WITH TIME ZONE DEFAULT systimestamp NOT NULL,
    dgrm_content            CLOB,
    dgrm_short_description  VARCHAR2(300),
    dgrm_description        CLOB,
    dgrm_icon               VARCHAR2(50)
);

ALTER TABLE flow_diagrams ADD CONSTRAINT dgrm_pk PRIMARY KEY ( dgrm_id );

ALTER TABLE flow_diagrams ADD CONSTRAINT dgrm_uk UNIQUE ( dgrm_name , dgrm_version);

ALTER TABLE flow_diagrams ADD CONSTRAINT dgrm_status_ck CHECK ( dgrm_status in ('draft','released','deprecated','archived'));

-- ensure only 1 released version of a diagram exists
CREATE UNIQUE INDEX dgrm_uk2 ON FLOW_DIAGRAMS ( DGRM_NAME, case DGRM_STATUS when 'released' then null else dgrm_version end );

CREATE TABLE flow_objects (
    objt_id            NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    objt_bpmn_id       VARCHAR2(50 CHAR) NOT NULL,
    objt_dgrm_id       NUMBER NOT NULL,
    objt_name          VARCHAR2(200 CHAR),
    objt_tag_name      VARCHAR2(50 CHAR),
    objt_sub_tag_name  VARCHAR2(50 CHAR),
    objt_objt_id       NUMBER,
    objt_objt_lane_id  NUMBER,
    objt_attached_to   VARCHAR2(50 CHAR),
    objt_interrupting  NUMBER,
    objt_attributes    CLOB
);

COMMENT ON COLUMN flow_objects.objt_objt_lane_id IS
    'Reference to Lane if any.';

ALTER TABLE flow_objects ADD CONSTRAINT objt_pk PRIMARY KEY ( objt_id );

ALTER TABLE flow_objects ADD CONSTRAINT objt_uk UNIQUE ( objt_dgrm_id,
                                                         objt_bpmn_id );

alter table flow_objects add constraint objt_attributes_ck check ( objt_attributes is json );

CREATE TABLE flow_processes (
    prcs_id                 NUMBER
        GENERATED ALWAYS AS IDENTITY ( START WITH 1 NOCACHE )
    NOT NULL,
    prcs_dgrm_id            NUMBER NOT NULL,
    prcs_name               VARCHAR2(150 CHAR) NOT NULL,
    prcs_process_bpmn_id    VARCHAR2(50 CHAR) ,
    prcs_status             VARCHAR2(20 CHAR) NOT NULL,
    prcs_init_ts            TIMESTAMP WITH TIME ZONE NOT NULL,
    prcs_init_by            VARCHAR2(255 CHAR),
    prcs_start_ts           TIMESTAMP WITH TIME ZONE,
    prcs_complete_ts        TIMESTAMP WITH TIME ZONE,  
    prcs_due_on             TIMESTAMP WITH TIME ZONE,
    prcs_archived_ts        TIMESTAMP WITH TIME ZONE,
    prcs_priority           NUMBER,
    prcs_logging_level      NUMBER,
    prcs_was_altered        VARCHAR2(1 CHAR),
    prcs_last_update        TIMESTAMP WITH TIME ZONE,
    prcs_last_update_by     VARCHAR2(255 CHAR)
);

ALTER TABLE flow_processes ADD CONSTRAINT prcs_pk PRIMARY KEY ( prcs_id );
ALTER TABLE flow_processes ADD CONSTRAINT prcs_ck_was_altered_yn CHECK (prcs_was_altered in ('Y','N'));
ALTER TABLE flow_processes ADD constraint prcs_logging_level_ck check (prcs_logging_level between 0 and 8);

create index flow_prcs_dgrm_status_ix on flow_processes (prcs_dgrm_id, prcs_status);

CREATE TABLE flow_subflow_log (
    sflg_prcs_id                NUMBER NOT NULL,
    sflg_objt_id                VARCHAR2(50) NOT NULL,
    sflg_sbfl_id                NUMBER NOT NULL,
    sflg_step_key               VARCHAR2(20 CHAR),
    sflg_dgrm_id                NUMBER,
    sflg_scope                  NUMBER,
    sflg_diagram_level          NUMBER,
    sflg_iter_id                NUMBER,
    sflg_last_updated           DATE,
    sflg_matching_object        VARCHAR2(50 CHAR),
    sflg_notes                  VARCHAR2(200)
);

create index flow_sflg_iter_ix on flow_subflow_log (sflg_prcs_id, sflg_dgrm_id  , sflg_diagram_level );

CREATE TABLE flow_subflows (
    sbfl_id                         NUMBER
        GENERATED ALWAYS AS IDENTITY ( START WITH 1 NOCACHE )
    NOT NULL,
    sbfl_prcs_id                    NUMBER NOT NULL,
    sbfl_dgrm_id                    NUMBER NOT NULL,
    sbfl_sbfl_id                    NUMBER,
    sbfl_process_level              NUMBER,
    sbfl_diagram_level              NUMBER,
    sbfl_calling_sbfl               NUMBER,
    sbfl_scope                      NUMBER,
    sbfl_starting_object            VARCHAR2(50 CHAR),
    sbfl_route                      VARCHAR2(100 CHAR),
    sbfl_last_completed             VARCHAR2(50 CHAR),
    sbfl_current                    VARCHAR2(50 CHAR),
    sbfl_step_key                   VARCHAR2(20 CHAR) not null,
    sbfl_due_on                     TIMESTAMP WITH TIME ZONE,
    sbfl_priority                   NUMBER,
    sbfl_status                     VARCHAR2(20 CHAR),
    sbfl_became_current             TIMESTAMP WITH TIME ZONE,
    sbfl_work_started               TIMESTAMP WITH TIME ZONE,
    sbfl_has_events                 VARCHAR2(200 CHAR),
    sbfl_is_following_ebg           VARCHAR2(1 CHAR),
    sbfl_lane                       VARCHAR2(50 CHAR),
    sbfl_lane_name                  VARCHAR2(200 CHAR), /*cannot always be looked up with callActivities so must include */
    sbfl_lane_isRole                VARCHAR2(10 CHAR), /*cannot always be looked up with callActivities so must include */
    sbfl_lane_role                  VARCHAR2(200 CHAR), /*cannot always be looked up with callActivities so must include */
    sbfl_reservation                VARCHAR2(255 CHAR),
    sbfl_potential_users            VARCHAR2(4000 CHAR),
    sbfl_potential_groups           VARCHAR2(4000 CHAR),
    sbfl_excluded_users             VARCHAR2(4000 CHAR),
    sbfl_apex_task_id               NUMBER,
    sbfl_apex_business_admin        VARCHAR2(4000 CHAR),
    sbfl_iteration_type             VARCHAR2(10 CHAR),
    sbfl_iobj_id                    NUMBER,
    sbfl_iter_id                    NUMBER,
    sbfl_iteration_var              VARCHAR2(50 CHAR),  -- remove after rewrite - acessible through flow_iterated_objects
    sbfl_iteration_var_scope        NUMBER, -- remove after rewrite - acessible through flow_iterated_objects
    sbfl_loop_counter               NUMBER,
    sbfl_loop_total_instances       NUMBER,
    sbfl_last_update                TIMESTAMP WITH TIME ZONE NOT NULL,
    sbfl_last_update_by             VARCHAR2(255 CHAR)
);

ALTER TABLE flow_subflows ADD CONSTRAINT sbfl_pk PRIMARY KEY ( sbfl_id );

ALTER TABLE flow_subflows ADD CONSTRAINT sbfl_ck_following_ebg_yn CHECK (sbfl_is_following_ebg in ('Y','N'));

create index flow_sbfl_dgrm_prcs_ix on flow_subflows( sbfl_dgrm_id, sbfl_prcs_id );

CREATE TABLE flow_instance_diagrams (
    prdg_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    prdg_prdg_id        NUMBER,                    
    prdg_prcs_id        NUMBER NOT NULL,
    prdg_dgrm_id        NUMBER NOT NULL,
    prdg_calling_dgrm   NUMBER,
    prdg_calling_objt   VARCHAR2(50 CHAR),
    prdg_diagram_level  NUMBER
);

alter table flow_instance_diagrams
  add constraint flow_prdg_pk primary key ( prdg_id )
;

create index flow_prdg_dgrm_prcs_ix
  on flow_instance_diagrams (prdg_prcs_id, prdg_dgrm_id);

create table flow_iterated_objects (
    iobj_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    iobj_prcs_id        NUMBER NOT NULL,
    iobj_diagram_level  NUMBER NOT NULL,
    iobj_dgrm_id        NUMBER NOT NULL,
    iobj_parent_bpmn_id VARCHAR2(50 CHAR) not null,
    iobj_step_key       VARCHAR2(20 CHAR) not null,
    iobj_iteration_var  VARCHAR2(50 CHAR) not null,
    iobj_var_scope      NUMBER not null,
    iobj_objt_type      VARCHAR2(15 char),
    iobj_iteration_type VARCHAR2(10 char),
    iobj_parent_iter_id NUMBER,
    iobj_display_name   VARCHAR2 (400 CHAR)
);

alter table flow_iterated_objects
  add constraint flow_iobj_pk primary key (iobj_id);

alter table flow_iterated_objects
  add constraint flow_iobj_uk unique    ( iobj_prcs_id
                                        , iobj_iteration_var
                                        , iobj_var_scope);

create index flow_iobj_step_key_ix on flow_iterated_objects
                                        ( iobj_prcs_id
                                        , iobj_step_key);

create table flow_iterations (
    iter_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    iter_prcs_id        number not null,
    iter_iobj_id        number not null,
    iter_loop_counter   number not null,
    iter_sbfl_id        number,
    iter_scope          number,
    iter_step_key       varchar2(20 char),
    iter_status         varchar2(10 char),
    iter_description    varchar2(200 char),
    iter_display_name   VARCHAR2 (400 CHAR),
    iter_inputs         clob,
    iter_outputs        clob
);

alter table flow_iterations
    add constraint flow_iter_pk primary key (iter_id);

alter table flow_iterations
    add constraint flow_iter_uk unique  ( iter_prcs_id 
                                        , iter_iobj_id
                                        , iter_loop_counter);

alter table flow_iterations add constraint iter_iobj_fk foreign key (iter_iobj_id) 
                                           references flow_iterated_objects (iobj_id)
                                           on delete cascade;        

alter table flow_iterated_objects add constraint iobj_parent_iter_fk foreign key (iobj_parent_iter_id) 
                                           references flow_iterations (iter_id)
                                           on delete cascade;                                                
                                                                                                                                                              

alter table flow_iterations add constraint iter_inputs_is_json_ck check ( iter_inputs is json );

alter table flow_iterations add constraint iter_outputs_is_json_ck check ( iter_outputs is json );

CREATE TABLE flow_timers (
    timr_id            NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    timr_run           NUMBER DEFAULT 1 NOT NULL,
    timr_prcs_id       NUMBER NOT NULL,
    timr_sbfl_id       NUMBER NOT NULL,
    timr_step_key      VARCHAR2(20 CHAR),
    timr_type          VARCHAR2(50 CHAR) NOT NULL,
    timr_last_run      TIMESTAMP WITH TIME ZONE,
    timr_created_on    TIMESTAMP WITH TIME ZONE NOT NULL,
    timr_status        VARCHAR2(1 CHAR) NOT NULL,
    timr_start_on      TIMESTAMP WITH TIME ZONE,
    timr_interval_ym   INTERVAL YEAR TO MONTH,
    timr_interval_ds   INTERVAL DAY TO SECOND,
    timr_repeat_times  NUMBER,
    timr_callback      VARCHAR2(200 CHAR),
    timr_callback_par  varchar2(200 CHAR)
);

CREATE INDEX timr_prcs_sbfl_ix ON
    flow_timers (
        timr_prcs_id
    ASC,
        timr_sbfl_id
    ASC );

ALTER TABLE flow_timers ADD CONSTRAINT timr_pk PRIMARY KEY ( timr_id , timr_run);

create table flow_message_subscriptions (
    msub_id                 number GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 ) NOT NULL, 
    msub_message_name	    varchar2(200 char),	
    msub_key_name	        varchar2(200 char),	
    msub_key_value	        varchar2(200 char),	
    msub_prcs_id	        number,	
    msub_sbfl_id	        number,	
    msub_step_key	        varchar2( 20 char),	
    msub_dgrm_id            number,
    msub_callback           varchar2(200 char),
    msub_callback_par       varchar2(200 char),
    msub_payload_var        varchar2(50 char),
    msub_created	        timestamp with time zone	
);


alter table flow_message_subscriptions
  add constraint flow_msub_pk primary key ( msub_id )
;

alter table flow_message_subscriptions
    add constraint flow_msub_uk UNIQUE (msub_message_name, msub_key_name, msub_key_value);

create index flow_msub_prcs_sbfl_ix on flow_message_subscriptions( msub_prcs_id, msub_sbfl_id );  



ALTER TABLE flow_connections
    ADD CONSTRAINT conn_dgrm_fk FOREIGN KEY ( conn_dgrm_id )
        REFERENCES flow_diagrams ( dgrm_id )
            ON DELETE CASCADE;

ALTER TABLE flow_connections
    ADD CONSTRAINT conn_src_objt_fk FOREIGN KEY ( conn_src_objt_id )
        REFERENCES flow_objects ( objt_id )
            ON DELETE SET NULL;

ALTER TABLE flow_connections
    ADD CONSTRAINT conn_tgt_objt_fk FOREIGN KEY ( conn_tgt_objt_id )
        REFERENCES flow_objects ( objt_id )
            ON DELETE SET NULL;

ALTER TABLE flow_objects
    ADD CONSTRAINT objt_dgrm_fk FOREIGN KEY ( objt_dgrm_id )
        REFERENCES flow_diagrams ( dgrm_id )
            ON DELETE CASCADE;

ALTER TABLE flow_objects
    ADD CONSTRAINT objt_objt_fk FOREIGN KEY ( objt_objt_id )
        REFERENCES flow_objects ( objt_id )
            ON DELETE CASCADE;

ALTER TABLE flow_objects
    ADD CONSTRAINT objt_objt_lane_fk FOREIGN KEY ( objt_objt_lane_id )
        REFERENCES flow_objects ( objt_id )
            ON DELETE SET NULL;

ALTER TABLE flow_processes
    ADD CONSTRAINT prcs_dgrm_fk FOREIGN KEY ( prcs_dgrm_id )
        REFERENCES flow_diagrams ( dgrm_id );

ALTER TABLE flow_subflows
    ADD CONSTRAINT sbfl_parent_sbfl_fk FOREIGN KEY ( sbfl_sbfl_id )
        REFERENCES flow_subflows ( sbfl_id )
            ON DELETE SET NULL;

ALTER TABLE flow_subflows
    ADD CONSTRAINT sbfl_dgrm_fk FOREIGN KEY ( sbfl_dgrm_id )
        REFERENCES flow_diagrams ( dgrm_id );

ALTER TABLE flow_subflows
    ADD CONSTRAINT sbfl_prcs_fk FOREIGN KEY ( sbfl_prcs_id )
        REFERENCES flow_processes ( prcs_id )
            ON DELETE CASCADE;

ALTER TABLE flow_instance_diagrams
    ADD CONSTRAINT prdg_prcs_fk FOREIGN KEY ( prdg_prcs_id )
        REFERENCES flow_processes ( prcs_id )
            ON DELETE CASCADE;

ALTER TABLE flow_instance_diagrams
    ADD CONSTRAINT prdg_dgrm_fk FOREIGN KEY ( prdg_dgrm_id )
        REFERENCES flow_diagrams ( dgrm_id );

ALTER TABLE flow_instance_diagrams
    ADD CONSTRAINT prdg_calling_dgrm_fk FOREIGN KEY ( prdg_calling_dgrm )
        REFERENCES flow_diagrams ( dgrm_id );

ALTER TABLE flow_timers
    ADD CONSTRAINT timr_prcs_fk FOREIGN KEY ( timr_prcs_id )
        REFERENCES flow_processes ( prcs_id )
            ON DELETE CASCADE;

ALTER TABLE flow_timers
    ADD CONSTRAINT timr_sbfl_fk FOREIGN KEY ( timr_sbfl_id )
        REFERENCES flow_subflows ( sbfl_id )
            ON DELETE CASCADE;
    
alter table flow_message_subscriptions
    add constraint flow_msub_prcs_fk FOREIGN KEY ( msub_prcs_id )
        references flow_processes (prcs_id)
            ON DELETE CASCADE;

alter table flow_message_subscriptions
    add constraint flow_msub_sbfl_fk FOREIGN KEY ( msub_sbfl_id )
        references flow_subflows (sbfl_id)
            ON DELETE CASCADE;

alter table flow_message_subscriptions
    add constraint flow_msub_dgrm_fk FOREIGN KEY ( msub_dgrm_id )
        references flow_diagrams (dgrm_id)
            ON DELETE CASCADE;
            
-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             1
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

-- Additional Objects not yet engineered in data modeler

create table flow_process_variables
( prov_prcs_id      number not null
, prov_scope        number not null
, prov_var_name     varchar2(50 char) not null
, prov_var_type     varchar2(50 char) not null 
, prov_var_vc2      varchar2(4000 char)
, prov_var_num      number
, prov_var_date     date
, prov_var_tstz     timestamp with time zone
, prov_var_clob     clob
, prov_var_json     clob
, prov_var_name_uc  varchar2(50 char) generated always as ( upper(prov_var_name) )
);

alter table flow_process_variables add constraint prov_pk primary key (prov_prcs_id, prov_scope, prov_var_name_uc);


alter table flow_process_variables add constraint prov_prcs_fk foreign key (prov_prcs_id)
   references flow_processes (prcs_id)
   on delete cascade;

alter table flow_process_variables add constraint prov_is_json check ( prov_var_json is json);


CREATE TABLE flow_object_expressions (
    expr_id          NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    expr_objt_id     NUMBER NOT NULL,
    expr_set         VARCHAR2(20 CHAR) NOT NULL,
    expr_order       NUMBER NOT NULL,
    expr_var_name    VARCHAR2(50 CHAR) NOT NULL,
    expr_var_type    VARCHAR2(50 CHAR) NOT NULL,
    expr_type        VARCHAR2(130 CHAR) NOT NULL,
    expr_expression  VARCHAR2(4000 CHAR) 
 );

ALTER TABLE flow_object_expressions ADD CONSTRAINT expr_pk PRIMARY KEY (expr_id);                                                     

ALTER TABLE flow_object_expressions 
    ADD CONSTRAINT expr_uk UNIQUE ( expr_objt_id, expr_set, expr_order);
  
ALTER TABLE flow_object_expressions
    ADD CONSTRAINT expr_objt_fk FOREIGN KEY ( expr_objt_id )
        REFERENCES flow_objects ( objt_id )
            ON DELETE CASCADE;

ALTER TABLE flow_object_expressions
    ADD CONSTRAINT expr_set_ck
      CHECK ( expr_set in ('beforeEvent', 'onEvent', 'beforeTask', 'afterTask', 'beforeSplit', 'afterMerge', 'inVariables', 'outVariables') );

/* Event logging Tables */

create table flow_flow_event_log
( lgfl_dgrm_id       		    NUMBER NOT NULL
, lgfl_dgrm_name     		    VARCHAR2(150 CHAR)
, lgfl_dgrm_version  		    VARCHAR2(10 CHAR) 
, lgfl_dgrm_status   		    VARCHAR2(10 CHAR) 
, lgfl_dgrm_category 		    VARCHAR2(30 CHAR)
, lgfl_timestamp 			    TIMESTAMP WITH TIME ZONE NOT NULL
, lgfl_user				        VARCHAR2(255 char)
, lgfl_comment                  VARCHAR2(2000 CHAR)
, lgfl_dgrm_archive_location    VARCHAR2(2000 CHAR)
);

create table flow_instance_event_log
( lgpr_prcs_id           	NUMBER NOT NULL
, lgpr_objt_id              VARCHAR2(50 CHAR)          -- objt_bpmn_id
, lgpr_sbfl_id      		NUMBER                     -- for step events
, lgpr_step_key             VARCHAR2(20 CHAR)          -- for step events
, lgpr_process_level        NUMBER                     -- for step events
, lgpr_dgrm_id      		NUMBER NOT NULL
, lgpr_prcs_name         	VARCHAR2(150 CHAR)
, lgpr_business_id			VARCHAR2(4000 char)
, lgpr_prcs_event       	VARCHAR2(20 CHAR) NOT NULL
, lgpr_severity             NUMBER
, lgpr_timestamp     		TIMESTAMP WITH TIME ZONE NOT NULL
, lgpr_duration             interval day(3) to second (3)
, lgpr_user 				VARCHAR2(255 char)
, lgpr_comment				VARCHAR2(2000 CHAR)
, lgpr_apex_task_id         NUMBER
, lgpr_error_info           VARCHAR2(2000 CHAR)
);

create index flow_lgpr_ix on flow_instance_event_log (lgpr_prcs_id, lgpr_objt_id );
-- TODO add step key to index as 3rd element?

create table flow_step_event_log
( lgsf_prcs_id       		NUMBER NOT NULL
, lgsf_objt_id       		VARCHAR2(50) NOT NULL
, lgsf_sbfl_id      		NUMBER NOT NULL
, lgsf_step_key             VARCHAR2(20 CHAR)
, lgsf_sbfl_process_level   NUMBER
, lgsf_last_completed 	    VARCHAR2(50) 
, lgsf_status_when_complete VARCHAR2(20)
, lgsf_sbfl_dgrm_id   	    NUMBER NOT NULL
, lgsf_was_current		    TIMESTAMP WITH TIME ZONE
, lgsf_started 			    TIMESTAMP WITH TIME ZONE
, lgsf_completed 			TIMESTAMP WITH TIME ZONE 
, lgsf_reservation		    VARCHAR2(255 char)
, lgsf_due_on               TIMESTAMP WITH TIME ZONE 
, lgsf_priority             NUMBER
, lgsf_apex_task_id         NUMBER
, lgsf_user				    VARCHAR2(255 char)	
, lgsf_comment         	    VARCHAR2(2000 CHAR)
);

create index flow_lgsf_ix on flow_step_event_log (lgsf_prcs_id, lgsf_objt_id );

create index flow_lgse_ix on flow_step_events (lgse_prcs_id, lgse_objt_bpmn_id );

create table flow_variable_event_log
( lgvr_prcs_id			    number not null
, lgvr_scope                number not null
, lgvr_var_name			    varchar2(50 char) not null
, lgvr_objt_id			    VARCHAR2(50 char) 
, lgvr_sbfl_id			    NUMBER
, lgvr_expr_set			    VARCHAR2(20 CHAR) 
, lgvr_timestamp			TIMESTAMP WITH TIME ZONE NOT NULL
, lgvr_user                 VARCHAR2(255 char)
, lgvr_var_type			    varchar2(50 char) not null 
, lgvr_var_vc2 			    varchar2(4000 char)
, lgvr_var_num 			    number
, lgvr_var_date 			date
, lgvr_var_tstz 			timestamp with time zone
, lgvr_var_clob 			clob
, lgvr_var_json             clob
);

create index flow_lgvr_ix on flow_variable_event_log (lgvr_prcs_id, lgvr_scope, lgvr_var_name);

create table flow_message_received_log
( lgrx_id                   number generated always as identity (start with 1) not null
, lgrx_message_name	        varchar2(200 char)
, lgrx_key_name	            varchar2(200 char)
, lgrx_key_value	          varchar2(200 char)
, lgrx_payload              clob
, lgrx_prcs_id	            number
, lgrx_sbfl_id	            number
, lgrx_received_on          timestamp with time zone
, lgrx_was_correlated       varchar2(1 char)
, lgrx_comment              varchar2(200 char)
);

alter table flow_message_received_log
  add constraint flow_lgrx_pk primary key ( lgrx_id )
;


/* Statistics Tables */

create table flow_instance_stats
( stpr_dgrm_id              number
, stpr_period_start         date
, stpr_period               varchar2(10 char)
, stpr_created              number
, stpr_started              number
, stpr_error                number
, stpr_completed            number
, stpr_terminated           number
, stpr_reset                number
, stpr_duration_10pc_ivl    interval day(3) to second(0)
, stpr_duration_50pc_ivl    interval day(3) to second(0)
, stpr_duration_90pc_ivl    interval day(3) to second(0)
, stpr_duration_max_ivl     interval day(3) to second(0)
, stpr_duration_10pc_sec    number
, stpr_duration_50pc_sec    number
, stpr_duration_90pc_sec    number
, stpr_duration_max_sec     number
);

create unique index flow_stpr_ux on flow_instance_stats (stpr_dgrm_id, stpr_period, stpr_period_start);

alter table flow_instance_stats
    add constraint flow_stpr_period_type_ck
      check ( stpr_period in ('DAY' ,'MONTH', 'MTD', 'QUARTER','YEAR') );

create table flow_step_stats
( stsf_dgrm_id             number
, stsf_objt_bpmn_id        varchar2(50 char)
, stsf_tag_name            varchar2(50 char)
, stsf_period_start        date
, stsf_period              varchar2(10 char)
, stsf_completed           number
, stsf_duration_10pc_ivl   interval day(3) to second(3)
, stsf_duration_50pc_ivl   interval day(3) to second(3)
, stsf_duration_90pc_ivl   interval day(3) to second(3)
, stsf_duration_max_ivl    interval day(3) to second(3)
, stsf_duration_10pc_sec   number
, stsf_duration_50pc_sec   number
, stsf_duration_90pc_sec   number
, stsf_duration_max_sec    number
, stsf_waiting_10pc_ivl    interval day(3) to second(3)
, stsf_waiting_50pc_ivl    interval day(3) to second(3)
, stsf_waiting_90pc_ivl    interval day(3) to second(3)
, stsf_waiting_max_ivl     interval day(3) to second(3)
, stsf_waiting_10pc_sec    number
, stsf_waiting_50pc_sec    number
, stsf_waiting_90pc_sec    number
, stsf_waiting_max_sec     number
);

create unique index flow_stsf_ux on flow_step_stats (stsf_dgrm_id, stsf_objt_bpmn_id, stsf_period, stsf_period_start);

alter table flow_step_stats
    add constraint flow_stsf_period_type_ck
      check ( stsf_period in ('DAY' , 'MTD', 'MONTH', 'QUARTER','YEAR') );

/* Configurations & Error Messages Tables */

create table flow_configuration
( cfig_key                  varchar2(50 char) NOT NULL
, cfig_value                varchar2(2000 char)
);

alter table flow_configuration ADD CONSTRAINT cfig_pk PRIMARY KEY ( cfig_key );

create table flow_messages
( fmsg_message_key          varchar2(30 char) not null
, fmsg_lang                 varchar2(10 char) not null
, fmsg_message_content      varchar2(2000 char) 
);

alter table flow_messages ADD CONSTRAINT fmsg_pk PRIMARY KEY ( fmsg_message_key, fmsg_lang );

create table flow_stats_history
( sths_id         number generated always as identity ( start with 1 nocache order ) not null
, sths_date       date
, sths_status     varchar2(50 char)
, sths_type       varchar2(20 char)
, sths_operation  varchar2(20 char)
, sths_errors     varchar2(4000 char)
, sths_comments   varchar2(4000 char)
, sths_created_on timestamp with time zone
, sths_updated_on timestamp with time zone
, sths_updated_by varchar2(50 char)
);

create index flow_sths_ix on flow_stats_history (sths_date);

alter table flow_stats_history
  add constraint flow_sths_pk
    primary key (sths_id)
;

alter table flow_stats_history
  add constraint flow_sths_status_ck
    check (sths_status in ('SUCCESS', 'ERROR') );

alter table flow_stats_history
  add constraint flow_sths_type_ck
  check (sths_type in ('DAY', 'MONTH', 'MTD', 'QUARTER', 'YEAR') );

create table flow_parser_log 
(
  plog_id         number generated always as identity increment by 1 start with 1 not null
, plog_dgrm_id    number not null
, plog_bpmn_id    varchar2( 50 char)
, plog_log_time   timestamp not null
, plog_parse_step varchar2(128 char) 
, plog_payload    clob
);

alter table flow_parser_log
  add constraint flow_plog_pk primary key (plog_id)
;

create index flow_plog_ix1
  on flow_parser_log( plog_dgrm_id, plog_log_time )
;

create table flow_rest_event_log (
  lgrt_id                   number generated always as identity (start with 1) not null
, lgrt_call_guid            RAW(16) not null
, lgrt_client_id            VARCHAR2(400 char)   
, lgrt_log_info             VARCHAR2(400 char)
, lgrt_token                VARCHAR2(400 char) 
, lgrt_timestamp        		TIMESTAMP WITH TIME ZONE NOT NULL
, lgrt_http_method          VARCHAR2(20 char)
, lgrt_endpoint           	VARCHAR2(4000 char)
, lgrt_payload              CLOB 
, lgrt_error_code           number
, lgrt_error_msg            VARCHAR2(2000 CHAR)
, lgrt_error_stacktrace     CLOB
);

create table flow_simple_form_templates (
  sfte_id        number generated by default as identity (start with 1) not null
, sfte_name      varchar2(150 char) not null
, sfte_static_id varchar2(150 char) not null
, sfte_content   clob
);

alter table flow_simple_form_templates add constraint sfte_pk primary key ( sfte_id );

alter table flow_simple_form_templates add constraint sfte_uk unique ( sfte_static_id );

alter table flow_simple_form_templates add constraint sfte_ck check ( sfte_content is json(strict) );

create table flow_ai_prompts
( aipr_id                     number generated by default as identity ( start with 1 nocache order )
                              not null
, aipr_prompt_key             varchar2(  50 char) not null
, aipr_lang                   varchar2(  10 char) not null
, aipr_provider_type_code     varchar2(  20 char)
, aipr_model_name             varchar2(1000 char)
, aipr_type                   varchar2(  20 char) not null
, aipr_title                  varchar2(  50 char)
, aipr_prompt_text            varchar2(4000 char)
, aipr_display_as_qa          varchar2(   1 char)
);

alter table flow_ai_prompts
  add constraint flow_aipr_pk primary key ( aipr_id );

alter table flow_ai_prompts 
  add constraint flow_aipr_uk unique  ( aipr_prompt_key
                                      , aipr_lang
                                      , aipr_provider_type_code
                                      , aipr_model_name
                                      );

  create table flow_bpmn_types 
   ( bpmn_code varchar2(15)
   , bpmn_object_name varchar2(100)
   , bpmn_tag_name varchar2(100)
   , bpmn_sub_tag_name varchar2(100)
   , bpmn_icon varchar2(100)
   , bpmn_super_type varchar2(20)
   , bpmn_is_supported char(1) default 'y'
   , bpmn_interrupting varchar2(1)
   , constraint flow_bpmn_types_pk primary key (bpmn_code)
                using index  enable
   ) ;

  create index flow_bpmn_types_tag2icon 
  on flow_bpmn_types (bpmn_tag_name, bpmn_sub_tag_name, bpmn_icon, bpmn_interrupting) 
  ; 
  
                                      