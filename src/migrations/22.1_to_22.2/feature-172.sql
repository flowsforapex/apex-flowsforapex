/*
  Migration Script for Release 22.1 to 22.2

  Created RAllen  25 Feb 2022

  (c) Copyright Oracle Corporation and/or its affiliates.  2022.

*/


PROMPT >> Halt DBMS_SCHEDULER job 



PROMPT >> Running Upgrade from 22.1 to 22.2
PROMPT >> -------------------------------------------


PROMPT >> Prepare Subflows for Call Activities

-- change constraint on flow_object_expressions to add 'inVariables' and 'outVariables'

ALTER TABLE flow_object_expressions
    drop CONSTRAINT expr_set_ck;

ALTER TABLE flow_object_expressions
    ADD CONSTRAINT expr_set_ck
      CHECK ( expr_set in ('beforeEvent', 'onEvent', 'beforeTask', 'afterTask', 'beforeSplit', 'afterMerge', 'inVariables', 'outVariables') );


begin
  execute immediate '
    alter table flow_subflows
    add (
      sbfl_calling_sbfl   number,
      sbfl_scope          number,
      sbfl_diagram_level  number,
      sbfl_lane           varchar2(50 char)
      sbfl_lane_name      varchar2(200 char)
    )' 
  ;

  update flow_subflows   --- needs more work - see below
  set sbfl_calling_sbfl = 0 
    , sbfl_scope = 0;
end;
/* Migrating existing instances with subProcess calls is a problem now sbfl_calling_sbfl is set for subProcesses and callActivities.  
 - we will need to step through existing prcesses where the process_level != 0, and set the sbfl_calling_sbfl to the calling sbfl
 -- its only for subproceses, as we won't have any call activities to migrate -- so we can get this with the right query on the objects / connections
 */

 /* need to add content to sbfl_lane for all existing subflows at migration 
 I’ve re-built the way that lanes work — which is required for call activities.
The bpmn only puts top level objects into lanes — anything inside a subProcess is assumed to inherit the lane of its parent subProcess.  However, a callActivity, which is in a separate diagram, can have a lane system of its own.  And these can be mixed & matched so that the parent diagram has no lanes but the called diagram does have lanes.  etc.
Before we put lanes on everything by resolving the inheritance from parents at parse time.  Now the parser only records those objects which have lanes in the bpmn, and we manage the inheritance at run-time.
I have the parser and runtime working, and the view rebuilt so it now gets the lane from flow_subflows.sbfl_lane.
BUT… there is a migration issue for running instances at migration.
Is it possible to reliably run a script BEFORE we change the DML?  I’m thinking that we should:
- Stop the engine for customer transactions & stop the scheduler.
- Make a copy of Flow_objects, or create a table as select objt_bpmn_id, corresponding lane bpmn_id for all objects.
- Do the upgrade, which will add flow_subflows.sbfl_lane 
- Re-parse all diagrams (we were going to do that anyhow for AJAX.   We need to do that for lanes now as well!)
- Populate sbfl_lanes for existing subflows using the copy of flow_objects from before the update.
- Any other migration.
- Restart the engine and scheduler
- Carry on running…
I haven’t written the migration script but wanted to record what is required somewhere while its fresh in my mind.
*/

  begin
    execute immediate '
      alter table flow_subflow_log
      add (
        sflg_dgrm_id       NUMBER,
        sflg_diagram_level NUMBER,
        sflg_calling_objt  VARCHAR2(50) -- only used on Start Events to record Parent
      )';
  end;

-- need to add migration
-- need to set not nulls as appropriate once migrated

  CREATE TABLE flow_instance_diagrams (
    prdg_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    prdg_prcs_id        NUMBER NOT NULL,
    prdg_dgrm_id        NUMBER NOT NULL,
    prdg_calling_dgrm   NUMBER,
    prdg_calling_objt   VARCHAR2(50 CHAR),
    prdg_diagram_level  NUMBER
);

-- add a row into here for each existing instance (all of which don't have callactivities)

insert into flow_instance_diagrams 
( prdg_prcs_id
, prdg_dgrm_id
, prdg_diagram_level
)
select prcs.prcs_id
     , prcs.prcs_dgrm_id
     , 0
from flow_processes prcs
;


PROMPT >> Prepare Process Variables for Scoping 

  alter table flow_process_variables
  add ( prov_scope number );

  alter table flow_variable_event_log
  add ( lgvr_scope number);

  update flow_process_variables prov
     set prov.prov_scope = 0;

  update flow_variable_event_log lgvr
     set lgvr.lgvr_scope = 0;

  alter table flow_process_variables
    drop constraint prov_pk;

  alter table flow_process_variables
    modify ( prov_scope not null);

  alter table flow_process_variables add constraint prov_pk primary key (prov_prcs_id, prov_scope, prov_var_name);


PROMPT >> Finished Upgrade from 22.1 to 22.2


PROMPT >> Resume DBMS_SCHEDULER job 
