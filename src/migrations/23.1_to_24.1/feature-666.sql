/*
  Migration Script for Feature 666 - Iterations, Loops, and JSON Process Variables

  Created  RAllen, Flowquest    11 Jan 2024


  (c) Copyright Flowquest Consulting Limited and/or its affiliates.  2024.

*/
PROMPT >> Create Iterations

PROMPT >> Database Changes

create table flow_iterated_objects (
    iobj_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    iobj_prcs_id        NUMBER NOT NULL,
    iobj_diagram_level  NUMBER NOT NULL,
    iobj_dgrm_id        NUMBER NOT NULL,
    iobj_parent_bpmn_id VARCHAR2(50 CHAR) not null,
    iobj_step_key       VARCHAR2(20 CHAR) not null,
    iobj_iteration_var  VARCHAR2(50 CHAR) not null,
    iobj_var_scope      NUMBER not null,
    iobj_objt_type      VARCHAR2(15 char),
    iobj_iteration_type VARCHAR2(10 char),
    iobj_parent_iter_id NUMBER,
    iobj_display_name   VARCHAR2 (400 CHAR)    
);

alter table flow_iterated_objects
  add constraint flow_iobj_pk primary key (iobj_id);

alter table flow_iterated_objects
  add constraint flow_iobj_uk unique    ( iobj_prcs_id
                                        , iobj_iteration_var
                                        , iobj_var_scope);

create index flow_iobj_step_key_ix on flow_iterated_objects
                                        ( iobj_prcs_id
                                        , iobj_step_key);

create table flow_iterations (
    iter_id             NUMBER GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
                        NOT NULL,
    iter_prcs_id        number not null,
    iter_iobj_id        number not null,
    iter_loop_counter   number not null,
    iter_sbfl_id        number,
    iter_scope          number,
    iter_step_key       varchar2(20 char),
    iter_status         varchar2(10 char),
    iter_description    varchar2(200 char),
    iter_inputs         clob,
    iter_outputs        clob,
    iter_display_name   VARCHAR2 (400 CHAR)   
);

alter table flow_iterations
    add constraint flow_iter_pk primary key (iter_id);

alter table flow_iterations
    add constraint flow_iter_uk unique  ( iter_prcs_id 
                                        , iter_iobj_id
                                        , iter_loop_counter);

alter table flow_iterations add constraint iter_iobj_fk foreign key (iter_iobj_id) 
                                           references flow_iterated_objects (iobj_id)
                                           on delete cascade;  

alter table flow_iterations add constraint iter_parent_iter_id_fk foreign key (iter_parent_iter_id) 
                                           references flow_iterations (iter_id)
                                           on delete cascade;         

alter table flow_iterated_objects add constraint iobj_parent_iter_fk foreign key (iobj_parent_iter_id) 
references flow_iterations (iter_id)
on delete cascade;                                                                

alter table flow_iterations add constraint iter_inputs_is_json_ck check ( iter_inputs is json );

alter table flow_iterations add constraint iter_outputs_is_json_ck check ( iter_outputs is json );

create table flow_steps (
    step_prcs_id                number not null,
    step_step_key               varchar2(20 char) not null,
    step_sbfl_id                number not null,
    step_objt_bpmn_id           VARCHAR2(50) NOT NULL,
    step_dgrm_id                NUMBER,
    step_scope                  NUMBER,
    step_diagram_level          NUMBER,
    step_iter_id                number,
    step_iteration_var          VARCHAR2(50 CHAR),
    step_last_updated           timestamp with time zone,
    step_status                 varchar2(12),
    step_notes                  VARCHAR2(200)
);
-- flow_steps will expand post 24.1

alter table flow_steps
    add constraint flow_steps_pk primary key ( step_prcs_id, step_step_key);

alter table flow_steps add constraint step_prcs_fk foreign key (step_prcs_id)
                                           references flow_processes (prcs_id)
                                           on delete cascade;  

alter table flow_steps add constraint step_iter_fk foreign key (step_iter_id) 
                                           references flow_iterations (iter_id)
                                           on delete cascade;  

declare
  v_column_exists number := 0;  
  v_table_exists  number := 0;  
begin

  select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'SBFL_LOOP_COUNTER'
     and upper(table_name)  = 'FLOW_SUBFLOWS';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_subflows add (
                         sbfl_iteration_type             VARCHAR2(10 CHAR),
                         sbfl_iobj_id                    NUMBER,
                         sbfl_iter_id                    NUMBER,
                         sbfl_loop_counter               NUMBER,
                         sbfl_loop_total_instances       NUMBER                 
                         )';
  end if;

    select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'SBFL_ITERATION_VAR'
     and upper(table_name)  = 'FLOW_SUBFLOWS';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_subflows add (
                         sbfl_iteration_var              VARCHAR2(50 CHAR)               
                         )';
  end if;

    select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'SBFL_ITERATION_VAR_SCOPE'
     and upper(table_name)  = 'FLOW_SUBFLOWS';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_subflows add (
                         sbfl_iteration_var_scope     NUMBER                   
                         )';
  end if;

  select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'PROV_VAR_JSON'
     and upper(table_name)  = 'FLOW_PROCESS_VARIABLES';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_process_variables add (
                         prov_var_json     clob,
                         constraint prov_is_json check ( prov_var_json is json)                       
                         )';
  end if;

  select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'SFLG_ITER_ID'
     and upper(table_name)  = 'FLOW_SUBFLOW_LOG';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_subflow_log add (
                             sflg_iter_id    NUMBER,                 
                         )';
  end if;

  select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'SFLG_SCOPE'
     and upper(table_name)  = 'FLOW_SUBFLOW_LOG';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_subflow_log add (
                             sflg_scope    NUMBER                   
                         )';
  end if;

  select count(*) 
    into v_column_exists
    from user_tab_cols
   where upper(column_name) = 'LGVR_VAR_JSON'
     and upper(table_name)  = 'FLOW_VARIABLE_EVENT_LOG';

  if (v_column_exists = 0) then
      execute immediate 'alter table flow_variable_event_log add (
                         lgvr_var_json     clob                     
                         )';
  end if;
end;
/


